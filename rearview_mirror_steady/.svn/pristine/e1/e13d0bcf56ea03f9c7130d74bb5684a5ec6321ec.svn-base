// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.txz.ui.flight;

@SuppressWarnings("hiding")
public interface FlightData {
  
  // enum SubEventId
  public static final int SUBEVENT_PLANE_DEFAULT = 0;
  public static final int SUBEVENT_PLANE_QUERY = 1;
  
  public static final class TicketData extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile TicketData[] _emptyArray;
    public static TicketData[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TicketData[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional bytes str_airline = 1;
    public byte[] strAirline;
    
    // optional bytes str_arrival_airport_name = 2;
    public byte[] strArrivalAirportName;
    
    // optional bytes str_arrival_time = 3;
    public byte[] strArrivalTime;
    
    // optional bytes str_arrival_time_hm = 4;
    public byte[] strArrivalTimeHm;
    
    // optional uint64 uint64_arrival_unix_timestamp = 5;
    public java.lang.Long uint64ArrivalUnixTimestamp;
    
    // optional bytes str_depart_airport_name = 6;
    public byte[] strDepartAirportName;
    
    // optional bytes str_depart_time = 7;
    public byte[] strDepartTime;
    
    // optional bytes str_depart_time_hm = 8;
    public byte[] strDepartTimeHm;
    
    // optional uint64 uint64_depart_unix_timestamp = 9;
    public java.lang.Long uint64DepartUnixTimestamp;
    
    // optional bytes str_economy_cabin_discount = 10;
    public byte[] strEconomyCabinDiscount;
    
    // optional uint32 uint32_economy_cabin_price = 11;
    public java.lang.Integer uint32EconomyCabinPrice;
    
    // optional bytes str_flight_num = 12;
    public byte[] strFlightNum;
    
    // optional uint32 uint32_ticket_count = 13;
    public java.lang.Integer uint32TicketCount;
    
    public TicketData() {
      clear();
    }
    
    public TicketData clear() {
      strAirline = null;
      strArrivalAirportName = null;
      strArrivalTime = null;
      strArrivalTimeHm = null;
      uint64ArrivalUnixTimestamp = null;
      strDepartAirportName = null;
      strDepartTime = null;
      strDepartTimeHm = null;
      uint64DepartUnixTimestamp = null;
      strEconomyCabinDiscount = null;
      uint32EconomyCabinPrice = null;
      strFlightNum = null;
      uint32TicketCount = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strAirline != null) {
        output.writeBytes(1, this.strAirline);
      }
      if (this.strArrivalAirportName != null) {
        output.writeBytes(2, this.strArrivalAirportName);
      }
      if (this.strArrivalTime != null) {
        output.writeBytes(3, this.strArrivalTime);
      }
      if (this.strArrivalTimeHm != null) {
        output.writeBytes(4, this.strArrivalTimeHm);
      }
      if (this.uint64ArrivalUnixTimestamp != null) {
        output.writeUInt64(5, this.uint64ArrivalUnixTimestamp);
      }
      if (this.strDepartAirportName != null) {
        output.writeBytes(6, this.strDepartAirportName);
      }
      if (this.strDepartTime != null) {
        output.writeBytes(7, this.strDepartTime);
      }
      if (this.strDepartTimeHm != null) {
        output.writeBytes(8, this.strDepartTimeHm);
      }
      if (this.uint64DepartUnixTimestamp != null) {
        output.writeUInt64(9, this.uint64DepartUnixTimestamp);
      }
      if (this.strEconomyCabinDiscount != null) {
        output.writeBytes(10, this.strEconomyCabinDiscount);
      }
      if (this.uint32EconomyCabinPrice != null) {
        output.writeUInt32(11, this.uint32EconomyCabinPrice);
      }
      if (this.strFlightNum != null) {
        output.writeBytes(12, this.strFlightNum);
      }
      if (this.uint32TicketCount != null) {
        output.writeUInt32(13, this.uint32TicketCount);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strAirline != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.strAirline);
      }
      if (this.strArrivalAirportName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.strArrivalAirportName);
      }
      if (this.strArrivalTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.strArrivalTime);
      }
      if (this.strArrivalTimeHm != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(4, this.strArrivalTimeHm);
      }
      if (this.uint64ArrivalUnixTimestamp != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(5, this.uint64ArrivalUnixTimestamp);
      }
      if (this.strDepartAirportName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(6, this.strDepartAirportName);
      }
      if (this.strDepartTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(7, this.strDepartTime);
      }
      if (this.strDepartTimeHm != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(8, this.strDepartTimeHm);
      }
      if (this.uint64DepartUnixTimestamp != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(9, this.uint64DepartUnixTimestamp);
      }
      if (this.strEconomyCabinDiscount != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(10, this.strEconomyCabinDiscount);
      }
      if (this.uint32EconomyCabinPrice != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(11, this.uint32EconomyCabinPrice);
      }
      if (this.strFlightNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(12, this.strFlightNum);
      }
      if (this.uint32TicketCount != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(13, this.uint32TicketCount);
      }
      return size;
    }
    
    @Override
    public TicketData mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strAirline = input.readBytes();
            break;
          }
          case 18: {
            this.strArrivalAirportName = input.readBytes();
            break;
          }
          case 26: {
            this.strArrivalTime = input.readBytes();
            break;
          }
          case 34: {
            this.strArrivalTimeHm = input.readBytes();
            break;
          }
          case 40: {
            this.uint64ArrivalUnixTimestamp = input.readUInt64();
            break;
          }
          case 50: {
            this.strDepartAirportName = input.readBytes();
            break;
          }
          case 58: {
            this.strDepartTime = input.readBytes();
            break;
          }
          case 66: {
            this.strDepartTimeHm = input.readBytes();
            break;
          }
          case 72: {
            this.uint64DepartUnixTimestamp = input.readUInt64();
            break;
          }
          case 82: {
            this.strEconomyCabinDiscount = input.readBytes();
            break;
          }
          case 88: {
            this.uint32EconomyCabinPrice = input.readUInt32();
            break;
          }
          case 98: {
            this.strFlightNum = input.readBytes();
            break;
          }
          case 104: {
            this.uint32TicketCount = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static TicketData parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TicketData(), data);
    }
    
    public static TicketData parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TicketData().mergeFrom(input);
    }
  }
  
  public static final class FlightInfos extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile FlightInfos[] _emptyArray;
    public static FlightInfos[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FlightInfos[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional bytes str_departure_city = 1;
    public byte[] strDepartureCity;
    
    // optional bytes str_arrival_city = 2;
    public byte[] strArrivalCity;
    
    // optional bytes str_departure_date = 3;
    public byte[] strDepartureDate;
    
    // repeated .com.txz.ui.flight.TicketData rpt_msg_tickets = 4;
    public com.txz.ui.flight.FlightData.TicketData[] rptMsgTickets;
    
    // optional bytes str_answer = 5;
    public byte[] strAnswer;
    
    // optional bytes str_json_data = 6;
    public byte[] strJsonData;
    
    public FlightInfos() {
      clear();
    }
    
    public FlightInfos clear() {
      strDepartureCity = null;
      strArrivalCity = null;
      strDepartureDate = null;
      rptMsgTickets = com.txz.ui.flight.FlightData.TicketData.emptyArray();
      strAnswer = null;
      strJsonData = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strDepartureCity != null) {
        output.writeBytes(1, this.strDepartureCity);
      }
      if (this.strArrivalCity != null) {
        output.writeBytes(2, this.strArrivalCity);
      }
      if (this.strDepartureDate != null) {
        output.writeBytes(3, this.strDepartureDate);
      }
      if (this.rptMsgTickets != null && this.rptMsgTickets.length > 0) {
        for (int i = 0; i < this.rptMsgTickets.length; i++) {
          com.txz.ui.flight.FlightData.TicketData element = this.rptMsgTickets[i];
          if (element != null) {
            output.writeMessage(4, element);
          }
        }
      }
      if (this.strAnswer != null) {
        output.writeBytes(5, this.strAnswer);
      }
      if (this.strJsonData != null) {
        output.writeBytes(6, this.strJsonData);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strDepartureCity != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.strDepartureCity);
      }
      if (this.strArrivalCity != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.strArrivalCity);
      }
      if (this.strDepartureDate != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.strDepartureDate);
      }
      if (this.rptMsgTickets != null && this.rptMsgTickets.length > 0) {
        for (int i = 0; i < this.rptMsgTickets.length; i++) {
          com.txz.ui.flight.FlightData.TicketData element = this.rptMsgTickets[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(4, element);
          }
        }
      }
      if (this.strAnswer != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(5, this.strAnswer);
      }
      if (this.strJsonData != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(6, this.strJsonData);
      }
      return size;
    }
    
    @Override
    public FlightInfos mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strDepartureCity = input.readBytes();
            break;
          }
          case 18: {
            this.strArrivalCity = input.readBytes();
            break;
          }
          case 26: {
            this.strDepartureDate = input.readBytes();
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.rptMsgTickets == null ? 0 : this.rptMsgTickets.length;
            com.txz.ui.flight.FlightData.TicketData[] newArray =
                new com.txz.ui.flight.FlightData.TicketData[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgTickets, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.ui.flight.FlightData.TicketData();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.ui.flight.FlightData.TicketData();
            input.readMessage(newArray[i]);
            this.rptMsgTickets = newArray;
            break;
          }
          case 42: {
            this.strAnswer = input.readBytes();
            break;
          }
          case 50: {
            this.strJsonData = input.readBytes();
            break;
          }
        }
      }
    }
    
    public static FlightInfos parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FlightInfos(), data);
    }
    
    public static FlightInfos parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FlightInfos().mergeFrom(input);
    }
  }
}
