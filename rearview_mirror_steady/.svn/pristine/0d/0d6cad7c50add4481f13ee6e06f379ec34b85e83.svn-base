// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.txz.user_manager;

@SuppressWarnings("hiding")
public interface UserManager {
  
  // enum SubCommand
  public static final int SUBCMD_DEFAULT = 0;
  public static final int SUBCMD_LOGIN = 1;
  public static final int SUBCMD_LOGOUT = 2;
  public static final int SUBCMD_HEARTBEAT = 3;
  public static final int SUBCMD_REGISTER = 4;
  
  // enum ErrorCode
  public static final int EC_DEFAULT = 0;
  public static final int EC_USER_NOT_EXIST = 1001;
  public static final int EC_PASSWORD_ERROR = 1002;
  public static final int EC_USER_ALREADY_EXIST = 1004;
  public static final int EC_VERIFY_CODE_ERROR = 1005;
  public static final int EC_VERIFY_CODE_GET_HIGH_FREQUENCY = 1006;
  public static final int EC_VERIFY_CODE_OVERTIME = 1007;
  
  public static final class TXZDeviceInfo extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile TXZDeviceInfo[] _emptyArray;
    public static TXZDeviceInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TXZDeviceInfo[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint64 uint64_eid = 1;
    public java.lang.Long uint64Eid;
    
    // optional uint64 uint64_owner_uid = 2;
    public java.lang.Long uint64OwnerUid;
    
    // optional bytes str_device_sn = 3;
    public byte[] strDeviceSn;
    
    public TXZDeviceInfo() {
      clear();
    }
    
    public TXZDeviceInfo clear() {
      uint64Eid = null;
      uint64OwnerUid = null;
      strDeviceSn = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint64Eid != null) {
        output.writeUInt64(1, this.uint64Eid);
      }
      if (this.uint64OwnerUid != null) {
        output.writeUInt64(2, this.uint64OwnerUid);
      }
      if (this.strDeviceSn != null) {
        output.writeBytes(3, this.strDeviceSn);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint64Eid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.uint64Eid);
      }
      if (this.uint64OwnerUid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(2, this.uint64OwnerUid);
      }
      if (this.strDeviceSn != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.strDeviceSn);
      }
      return size;
    }
    
    @Override
    public TXZDeviceInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint64Eid = input.readUInt64();
            break;
          }
          case 16: {
            this.uint64OwnerUid = input.readUInt64();
            break;
          }
          case 26: {
            this.strDeviceSn = input.readBytes();
            break;
          }
        }
      }
    }
    
    public static TXZDeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TXZDeviceInfo(), data);
    }
    
    public static TXZDeviceInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TXZDeviceInfo().mergeFrom(input);
    }
  }
}
