// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.txz.audio_manager;

@SuppressWarnings("hiding")
public interface AudioManager {
  
  // enum SubCommand
  public static final int SUBCMD_DEFAULT = 0;
  public static final int SUBCMD_DATA_INTERFACE = 1;
  public static final int SUBCMD_SEARCH = 3;
  public static final int SUBCMD_PREPROCESSING_URL = 4;
  
  // enum ErrorCode
  public static final int EC_DEFAULT = 0;
  public static final int EC_NEED_INSTALL_FM_OR_MUSIC_APP = 11001;
  
  public static final class AudioRecord extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile AudioRecord[] _emptyArray;
    public static AudioRecord[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AudioRecord[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_app_id = 1;
    public java.lang.Integer uint32AppId;
    
    // optional uint64 uint64_audio_id = 2;
    public java.lang.Long uint64AudioId;
    
    // optional string str_audio_name = 3;
    public java.lang.String strAudioName;
    
    // optional uint64 uint64_album_id = 4;
    public java.lang.Long uint64AlbumId;
    
    // optional string str_album_name = 5;
    public java.lang.String strAlbumName;
    
    // repeated string rpt_str_artist = 6;
    public java.lang.String[] rptStrArtist;
    
    // repeated string rpt_str_tags = 7;
    public java.lang.String[] rptStrTags;
    
    // optional uint32 uint32_download_type = 8;
    public java.lang.Integer uint32DownloadType;
    
    // optional string str_download_url = 9;
    public java.lang.String strDownloadUrl;
    
    // optional uint32 uint32_download_url_exp_time = 10;
    public java.lang.Integer uint32DownloadUrlExpTime;
    
    // optional string str_preprocessing_url = 11;
    public java.lang.String strPreprocessingUrl;
    
    // optional uint32 uint32_duration = 12;
    public java.lang.Integer uint32Duration;
    
    // optional uint32 uint32_file_size = 13;
    public java.lang.Integer uint32FileSize;
    
    // optional string str_audio_ext = 14;
    public java.lang.String strAudioExt;
    
    // optional bool b_no_cache = 15;
    public java.lang.Boolean bNoCache;
    
    public AudioRecord() {
      clear();
    }
    
    public AudioRecord clear() {
      uint32AppId = null;
      uint64AudioId = null;
      strAudioName = null;
      uint64AlbumId = null;
      strAlbumName = null;
      rptStrArtist = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      rptStrTags = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      uint32DownloadType = null;
      strDownloadUrl = null;
      uint32DownloadUrlExpTime = null;
      strPreprocessingUrl = null;
      uint32Duration = null;
      uint32FileSize = null;
      strAudioExt = null;
      bNoCache = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32AppId != null) {
        output.writeUInt32(1, this.uint32AppId);
      }
      if (this.uint64AudioId != null) {
        output.writeUInt64(2, this.uint64AudioId);
      }
      if (this.strAudioName != null) {
        output.writeString(3, this.strAudioName);
      }
      if (this.uint64AlbumId != null) {
        output.writeUInt64(4, this.uint64AlbumId);
      }
      if (this.strAlbumName != null) {
        output.writeString(5, this.strAlbumName);
      }
      if (this.rptStrArtist != null && this.rptStrArtist.length > 0) {
        for (int i = 0; i < this.rptStrArtist.length; i++) {
          java.lang.String element = this.rptStrArtist[i];
          if (element != null) {
            output.writeString(6, element);
          }
        }
      }
      if (this.rptStrTags != null && this.rptStrTags.length > 0) {
        for (int i = 0; i < this.rptStrTags.length; i++) {
          java.lang.String element = this.rptStrTags[i];
          if (element != null) {
            output.writeString(7, element);
          }
        }
      }
      if (this.uint32DownloadType != null) {
        output.writeUInt32(8, this.uint32DownloadType);
      }
      if (this.strDownloadUrl != null) {
        output.writeString(9, this.strDownloadUrl);
      }
      if (this.uint32DownloadUrlExpTime != null) {
        output.writeUInt32(10, this.uint32DownloadUrlExpTime);
      }
      if (this.strPreprocessingUrl != null) {
        output.writeString(11, this.strPreprocessingUrl);
      }
      if (this.uint32Duration != null) {
        output.writeUInt32(12, this.uint32Duration);
      }
      if (this.uint32FileSize != null) {
        output.writeUInt32(13, this.uint32FileSize);
      }
      if (this.strAudioExt != null) {
        output.writeString(14, this.strAudioExt);
      }
      if (this.bNoCache != null) {
        output.writeBool(15, this.bNoCache);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32AppId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32AppId);
      }
      if (this.uint64AudioId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(2, this.uint64AudioId);
      }
      if (this.strAudioName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strAudioName);
      }
      if (this.uint64AlbumId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(4, this.uint64AlbumId);
      }
      if (this.strAlbumName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.strAlbumName);
      }
      if (this.rptStrArtist != null && this.rptStrArtist.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rptStrArtist.length; i++) {
          java.lang.String element = this.rptStrArtist[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.rptStrTags != null && this.rptStrTags.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rptStrTags.length; i++) {
          java.lang.String element = this.rptStrTags[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.uint32DownloadType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(8, this.uint32DownloadType);
      }
      if (this.strDownloadUrl != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.strDownloadUrl);
      }
      if (this.uint32DownloadUrlExpTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(10, this.uint32DownloadUrlExpTime);
      }
      if (this.strPreprocessingUrl != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.strPreprocessingUrl);
      }
      if (this.uint32Duration != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(12, this.uint32Duration);
      }
      if (this.uint32FileSize != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(13, this.uint32FileSize);
      }
      if (this.strAudioExt != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(14, this.strAudioExt);
      }
      if (this.bNoCache != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(15, this.bNoCache);
      }
      return size;
    }
    
    @Override
    public AudioRecord mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32AppId = input.readUInt32();
            break;
          }
          case 16: {
            this.uint64AudioId = input.readUInt64();
            break;
          }
          case 26: {
            this.strAudioName = input.readString();
            break;
          }
          case 32: {
            this.uint64AlbumId = input.readUInt64();
            break;
          }
          case 42: {
            this.strAlbumName = input.readString();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.rptStrArtist == null ? 0 : this.rptStrArtist.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrArtist, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rptStrArtist = newArray;
            break;
          }
          case 58: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.rptStrTags == null ? 0 : this.rptStrTags.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrTags, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rptStrTags = newArray;
            break;
          }
          case 64: {
            this.uint32DownloadType = input.readUInt32();
            break;
          }
          case 74: {
            this.strDownloadUrl = input.readString();
            break;
          }
          case 80: {
            this.uint32DownloadUrlExpTime = input.readUInt32();
            break;
          }
          case 90: {
            this.strPreprocessingUrl = input.readString();
            break;
          }
          case 96: {
            this.uint32Duration = input.readUInt32();
            break;
          }
          case 104: {
            this.uint32FileSize = input.readUInt32();
            break;
          }
          case 114: {
            this.strAudioExt = input.readString();
            break;
          }
          case 120: {
            this.bNoCache = input.readBool();
            break;
          }
        }
      }
    }
    
    public static AudioRecord parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AudioRecord(), data);
    }
    
    public static AudioRecord parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AudioRecord().mergeFrom(input);
    }
  }
  
  public static final class Preprocessing extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Preprocessing[] _emptyArray;
    public static Preprocessing[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Preprocessing[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string str_preprocessing_url = 1;
    public java.lang.String strPreprocessingUrl;
    
    // optional bytes str_preprocessing_content = 2;
    public byte[] strPreprocessingContent;
    
    // optional uint32 uint32_time = 3;
    public java.lang.Integer uint32Time;
    
    public Preprocessing() {
      clear();
    }
    
    public Preprocessing clear() {
      strPreprocessingUrl = null;
      strPreprocessingContent = null;
      uint32Time = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strPreprocessingUrl != null) {
        output.writeString(1, this.strPreprocessingUrl);
      }
      if (this.strPreprocessingContent != null) {
        output.writeBytes(2, this.strPreprocessingContent);
      }
      if (this.uint32Time != null) {
        output.writeUInt32(3, this.uint32Time);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strPreprocessingUrl != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.strPreprocessingUrl);
      }
      if (this.strPreprocessingContent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.strPreprocessingContent);
      }
      if (this.uint32Time != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32Time);
      }
      return size;
    }
    
    @Override
    public Preprocessing mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strPreprocessingUrl = input.readString();
            break;
          }
          case 18: {
            this.strPreprocessingContent = input.readBytes();
            break;
          }
          case 24: {
            this.uint32Time = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static Preprocessing parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Preprocessing(), data);
    }
    
    public static Preprocessing parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Preprocessing().mergeFrom(input);
    }
  }
  
  public static final class SearchFilter extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile SearchFilter[] _emptyArray;
    public static SearchFilter[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SearchFilter[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string str_text = 1;
    public java.lang.String strText;
    
    // optional string str_audio_name = 2;
    public java.lang.String strAudioName;
    
    // optional string str_album_name = 3;
    public java.lang.String strAlbumName;
    
    // repeated string rpt_str_artist = 4;
    public java.lang.String[] rptStrArtist;
    
    // optional string str_keyword = 5;
    public java.lang.String strKeyword;
    
    public SearchFilter() {
      clear();
    }
    
    public SearchFilter clear() {
      strText = null;
      strAudioName = null;
      strAlbumName = null;
      rptStrArtist = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      strKeyword = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strText != null) {
        output.writeString(1, this.strText);
      }
      if (this.strAudioName != null) {
        output.writeString(2, this.strAudioName);
      }
      if (this.strAlbumName != null) {
        output.writeString(3, this.strAlbumName);
      }
      if (this.rptStrArtist != null && this.rptStrArtist.length > 0) {
        for (int i = 0; i < this.rptStrArtist.length; i++) {
          java.lang.String element = this.rptStrArtist[i];
          if (element != null) {
            output.writeString(4, element);
          }
        }
      }
      if (this.strKeyword != null) {
        output.writeString(5, this.strKeyword);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.strText);
      }
      if (this.strAudioName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.strAudioName);
      }
      if (this.strAlbumName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strAlbumName);
      }
      if (this.rptStrArtist != null && this.rptStrArtist.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rptStrArtist.length; i++) {
          java.lang.String element = this.rptStrArtist[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.strKeyword != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.strKeyword);
      }
      return size;
    }
    
    @Override
    public SearchFilter mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strText = input.readString();
            break;
          }
          case 18: {
            this.strAudioName = input.readString();
            break;
          }
          case 26: {
            this.strAlbumName = input.readString();
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.rptStrArtist == null ? 0 : this.rptStrArtist.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrArtist, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rptStrArtist = newArray;
            break;
          }
          case 42: {
            this.strKeyword = input.readString();
            break;
          }
        }
      }
    }
    
    public static SearchFilter parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SearchFilter(), data);
    }
    
    public static SearchFilter parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SearchFilter().mergeFrom(input);
    }
  }
  
  public static final class Req_Search extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Req_Search[] _emptyArray;
    public static Req_Search[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Req_Search[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional .com.txz.audio_manager.SearchFilter msg_search_filter = 1;
    public com.txz.audio_manager.AudioManager.SearchFilter msgSearchFilter;
    
    // repeated .com.txz.audio_manager.Preprocessing rpt_msg_preprocessing_list = 2;
    public com.txz.audio_manager.AudioManager.Preprocessing[] rptMsgPreprocessingList;
    
    // repeated string rpt_str_app_list = 3;
    public java.lang.String[] rptStrAppList;
    
    public Req_Search() {
      clear();
    }
    
    public Req_Search clear() {
      msgSearchFilter = null;
      rptMsgPreprocessingList = com.txz.audio_manager.AudioManager.Preprocessing.emptyArray();
      rptStrAppList = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.msgSearchFilter != null) {
        output.writeMessage(1, this.msgSearchFilter);
      }
      if (this.rptMsgPreprocessingList != null && this.rptMsgPreprocessingList.length > 0) {
        for (int i = 0; i < this.rptMsgPreprocessingList.length; i++) {
          com.txz.audio_manager.AudioManager.Preprocessing element = this.rptMsgPreprocessingList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.rptStrAppList != null && this.rptStrAppList.length > 0) {
        for (int i = 0; i < this.rptStrAppList.length; i++) {
          java.lang.String element = this.rptStrAppList[i];
          if (element != null) {
            output.writeString(3, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.msgSearchFilter != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.msgSearchFilter);
      }
      if (this.rptMsgPreprocessingList != null && this.rptMsgPreprocessingList.length > 0) {
        for (int i = 0; i < this.rptMsgPreprocessingList.length; i++) {
          com.txz.audio_manager.AudioManager.Preprocessing element = this.rptMsgPreprocessingList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.rptStrAppList != null && this.rptStrAppList.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rptStrAppList.length; i++) {
          java.lang.String element = this.rptStrAppList[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }
    
    @Override
    public Req_Search mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.msgSearchFilter == null) {
              this.msgSearchFilter = new com.txz.audio_manager.AudioManager.SearchFilter();
            }
            input.readMessage(this.msgSearchFilter);
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.rptMsgPreprocessingList == null ? 0 : this.rptMsgPreprocessingList.length;
            com.txz.audio_manager.AudioManager.Preprocessing[] newArray =
                new com.txz.audio_manager.AudioManager.Preprocessing[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgPreprocessingList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.audio_manager.AudioManager.Preprocessing();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.audio_manager.AudioManager.Preprocessing();
            input.readMessage(newArray[i]);
            this.rptMsgPreprocessingList = newArray;
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.rptStrAppList == null ? 0 : this.rptStrAppList.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrAppList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rptStrAppList = newArray;
            break;
          }
        }
      }
    }
    
    public static Req_Search parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Req_Search(), data);
    }
    
    public static Req_Search parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Req_Search().mergeFrom(input);
    }
  }
  
  public static final class Resp_Search extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Resp_Search[] _emptyArray;
    public static Resp_Search[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Resp_Search[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional bool b_ok = 1;
    public java.lang.Boolean bOk;
    
    // repeated .com.txz.audio_manager.AudioRecord rpt_audio_list = 2;
    public com.txz.audio_manager.AudioManager.AudioRecord[] rptAudioList;
    
    // optional .com.txz.audio_manager.SearchFilter msg_search_filter = 3;
    public com.txz.audio_manager.AudioManager.SearchFilter msgSearchFilter;
    
    public Resp_Search() {
      clear();
    }
    
    public Resp_Search clear() {
      bOk = null;
      rptAudioList = com.txz.audio_manager.AudioManager.AudioRecord.emptyArray();
      msgSearchFilter = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.bOk != null) {
        output.writeBool(1, this.bOk);
      }
      if (this.rptAudioList != null && this.rptAudioList.length > 0) {
        for (int i = 0; i < this.rptAudioList.length; i++) {
          com.txz.audio_manager.AudioManager.AudioRecord element = this.rptAudioList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.msgSearchFilter != null) {
        output.writeMessage(3, this.msgSearchFilter);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.bOk != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.bOk);
      }
      if (this.rptAudioList != null && this.rptAudioList.length > 0) {
        for (int i = 0; i < this.rptAudioList.length; i++) {
          com.txz.audio_manager.AudioManager.AudioRecord element = this.rptAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.msgSearchFilter != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.msgSearchFilter);
      }
      return size;
    }
    
    @Override
    public Resp_Search mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.bOk = input.readBool();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.rptAudioList == null ? 0 : this.rptAudioList.length;
            com.txz.audio_manager.AudioManager.AudioRecord[] newArray =
                new com.txz.audio_manager.AudioManager.AudioRecord[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.audio_manager.AudioManager.AudioRecord();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.audio_manager.AudioManager.AudioRecord();
            input.readMessage(newArray[i]);
            this.rptAudioList = newArray;
            break;
          }
          case 26: {
            if (this.msgSearchFilter == null) {
              this.msgSearchFilter = new com.txz.audio_manager.AudioManager.SearchFilter();
            }
            input.readMessage(this.msgSearchFilter);
            break;
          }
        }
      }
    }
    
    public static Resp_Search parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Resp_Search(), data);
    }
    
    public static Resp_Search parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Resp_Search().mergeFrom(input);
    }
  }
  
  public static final class Req_PreprocessingURL extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Req_PreprocessingURL[] _emptyArray;
    public static Req_PreprocessingURL[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Req_PreprocessingURL[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.audio_manager.Preprocessing rpt_msg_preprocessing_list = 2;
    public com.txz.audio_manager.AudioManager.Preprocessing[] rptMsgPreprocessingList;
    
    // repeated .com.txz.audio_manager.AudioRecord rpt_str_audio_list = 3;
    public com.txz.audio_manager.AudioManager.AudioRecord[] rptStrAudioList;
    
    public Req_PreprocessingURL() {
      clear();
    }
    
    public Req_PreprocessingURL clear() {
      rptMsgPreprocessingList = com.txz.audio_manager.AudioManager.Preprocessing.emptyArray();
      rptStrAudioList = com.txz.audio_manager.AudioManager.AudioRecord.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptMsgPreprocessingList != null && this.rptMsgPreprocessingList.length > 0) {
        for (int i = 0; i < this.rptMsgPreprocessingList.length; i++) {
          com.txz.audio_manager.AudioManager.Preprocessing element = this.rptMsgPreprocessingList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.rptStrAudioList != null && this.rptStrAudioList.length > 0) {
        for (int i = 0; i < this.rptStrAudioList.length; i++) {
          com.txz.audio_manager.AudioManager.AudioRecord element = this.rptStrAudioList[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptMsgPreprocessingList != null && this.rptMsgPreprocessingList.length > 0) {
        for (int i = 0; i < this.rptMsgPreprocessingList.length; i++) {
          com.txz.audio_manager.AudioManager.Preprocessing element = this.rptMsgPreprocessingList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.rptStrAudioList != null && this.rptStrAudioList.length > 0) {
        for (int i = 0; i < this.rptStrAudioList.length; i++) {
          com.txz.audio_manager.AudioManager.AudioRecord element = this.rptStrAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Req_PreprocessingURL mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.rptMsgPreprocessingList == null ? 0 : this.rptMsgPreprocessingList.length;
            com.txz.audio_manager.AudioManager.Preprocessing[] newArray =
                new com.txz.audio_manager.AudioManager.Preprocessing[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgPreprocessingList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.audio_manager.AudioManager.Preprocessing();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.audio_manager.AudioManager.Preprocessing();
            input.readMessage(newArray[i]);
            this.rptMsgPreprocessingList = newArray;
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.rptStrAudioList == null ? 0 : this.rptStrAudioList.length;
            com.txz.audio_manager.AudioManager.AudioRecord[] newArray =
                new com.txz.audio_manager.AudioManager.AudioRecord[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.audio_manager.AudioManager.AudioRecord();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.audio_manager.AudioManager.AudioRecord();
            input.readMessage(newArray[i]);
            this.rptStrAudioList = newArray;
            break;
          }
        }
      }
    }
    
    public static Req_PreprocessingURL parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Req_PreprocessingURL(), data);
    }
    
    public static Req_PreprocessingURL parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Req_PreprocessingURL().mergeFrom(input);
    }
  }
  
  public static final class Resp_PreprocessingURL extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Resp_PreprocessingURL[] _emptyArray;
    public static Resp_PreprocessingURL[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Resp_PreprocessingURL[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.audio_manager.AudioRecord rpt_audio_list = 1;
    public com.txz.audio_manager.AudioManager.AudioRecord[] rptAudioList;
    
    public Resp_PreprocessingURL() {
      clear();
    }
    
    public Resp_PreprocessingURL clear() {
      rptAudioList = com.txz.audio_manager.AudioManager.AudioRecord.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptAudioList != null && this.rptAudioList.length > 0) {
        for (int i = 0; i < this.rptAudioList.length; i++) {
          com.txz.audio_manager.AudioManager.AudioRecord element = this.rptAudioList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptAudioList != null && this.rptAudioList.length > 0) {
        for (int i = 0; i < this.rptAudioList.length; i++) {
          com.txz.audio_manager.AudioManager.AudioRecord element = this.rptAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Resp_PreprocessingURL mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.rptAudioList == null ? 0 : this.rptAudioList.length;
            com.txz.audio_manager.AudioManager.AudioRecord[] newArray =
                new com.txz.audio_manager.AudioManager.AudioRecord[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.audio_manager.AudioManager.AudioRecord();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.audio_manager.AudioManager.AudioRecord();
            input.readMessage(newArray[i]);
            this.rptAudioList = newArray;
            break;
          }
        }
      }
    }
    
    public static Resp_PreprocessingURL parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Resp_PreprocessingURL(), data);
    }
    
    public static Resp_PreprocessingURL parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Resp_PreprocessingURL().mergeFrom(input);
    }
  }
  
  public static final class Req_DataInterface extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Req_DataInterface[] _emptyArray;
    public static Req_DataInterface[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Req_DataInterface[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string str_cmd = 1;
    public java.lang.String strCmd;
    
    // optional bytes str_data = 2;
    public byte[] strData;
    
    // optional uint32 uint32_seq = 3;
    public java.lang.Integer uint32Seq;
    
    public Req_DataInterface() {
      clear();
    }
    
    public Req_DataInterface clear() {
      strCmd = null;
      strData = null;
      uint32Seq = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strCmd != null) {
        output.writeString(1, this.strCmd);
      }
      if (this.strData != null) {
        output.writeBytes(2, this.strData);
      }
      if (this.uint32Seq != null) {
        output.writeUInt32(3, this.uint32Seq);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strCmd != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.strCmd);
      }
      if (this.strData != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.strData);
      }
      if (this.uint32Seq != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32Seq);
      }
      return size;
    }
    
    @Override
    public Req_DataInterface mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strCmd = input.readString();
            break;
          }
          case 18: {
            this.strData = input.readBytes();
            break;
          }
          case 24: {
            this.uint32Seq = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static Req_DataInterface parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Req_DataInterface(), data);
    }
    
    public static Req_DataInterface parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Req_DataInterface().mergeFrom(input);
    }
  }
  
  public static final class Resp_DataInterface extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Resp_DataInterface[] _emptyArray;
    public static Resp_DataInterface[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Resp_DataInterface[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string str_cmd = 1;
    public java.lang.String strCmd;
    
    // optional bytes str_data = 2;
    public byte[] strData;
    
    // optional uint32 uint32_seq = 3;
    public java.lang.Integer uint32Seq;
    
    public Resp_DataInterface() {
      clear();
    }
    
    public Resp_DataInterface clear() {
      strCmd = null;
      strData = null;
      uint32Seq = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strCmd != null) {
        output.writeString(1, this.strCmd);
      }
      if (this.strData != null) {
        output.writeBytes(2, this.strData);
      }
      if (this.uint32Seq != null) {
        output.writeUInt32(3, this.uint32Seq);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strCmd != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.strCmd);
      }
      if (this.strData != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.strData);
      }
      if (this.uint32Seq != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32Seq);
      }
      return size;
    }
    
    @Override
    public Resp_DataInterface mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strCmd = input.readString();
            break;
          }
          case 18: {
            this.strData = input.readBytes();
            break;
          }
          case 24: {
            this.uint32Seq = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static Resp_DataInterface parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Resp_DataInterface(), data);
    }
    
    public static Resp_DataInterface parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Resp_DataInterface().mergeFrom(input);
    }
  }
}
