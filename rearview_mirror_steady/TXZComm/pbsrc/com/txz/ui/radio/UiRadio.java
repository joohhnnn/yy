// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.txz.ui.radio;

@SuppressWarnings("hiding")
public interface UiRadio {
  
  // enum SubEvent
  public static final int SUBEVENT_RADIO_DEFAULT = 0;
  public static final int SUBEVENT_RADIO_PLAY = 1;
  public static final int SUBEVENT_RADIO_PAUSE = 2;
  public static final int SUBEVENT_RADIO_NEXT = 3;
  public static final int SUBEVENT_RADIO_PREV = 4;
  public static final int SUBEVENT_RADIO_RANDOM = 5;
  public static final int SUBEVENT_RADIO_MODE_LOOP_SINGLE = 6;
  public static final int SUBEVENT_RADIO_MODE_LOOP_ALL = 7;
  public static final int SUBEVENT_RADIO_MODE_RANDOM = 8;
  public static final int SUBEVENT_RADIO_PLAY_ONLY = 9;
  public static final int SUBEVENT_RADIO_DELETE = 16;
  public static final int SUBEVENT_RADIO_EXIT = 17;
  
  // enum RADIOType
  public static final int RADIO_TYPE_RADIO = 0;
  public static final int RADIO_TYPE_NEWS = 1;
  
  public static final class RADIOIndex extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile RADIOIndex[] _emptyArray;
    public static RADIOIndex[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RADIOIndex[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional int32 int32_number = 1;
    public java.lang.Integer int32Number;
    
    // optional bytes str_unit = 2;
    public byte[] strUnit;
    
    public RADIOIndex() {
      clear();
    }
    
    public RADIOIndex clear() {
      int32Number = null;
      strUnit = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.int32Number != null) {
        output.writeInt32(1, this.int32Number);
      }
      if (this.strUnit != null) {
        output.writeBytes(2, this.strUnit);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.int32Number != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.int32Number);
      }
      if (this.strUnit != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.strUnit);
      }
      return size;
    }
    
    @Override
    public RADIOIndex mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.int32Number = input.readInt32();
            break;
          }
          case 18: {
            this.strUnit = input.readBytes();
            break;
          }
        }
      }
    }
    
    public static RADIOIndex parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RADIOIndex(), data);
    }
    
    public static RADIOIndex parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RADIOIndex().mergeFrom(input);
    }
  }
  
  public static final class RADIOModel extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile RADIOModel[] _emptyArray;
    public static RADIOModel[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RADIOModel[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional int32 int32_id = 1;
    public java.lang.Integer int32Id;
    
    // optional string str_title = 2;
    public java.lang.String strTitle;
    
    // optional string str_album = 3;
    public java.lang.String strAlbum;
    
    // repeated string rpt_str_artist = 4;
    public java.lang.String[] rptStrArtist;
    
    // optional string str_path = 5;
    public java.lang.String strPath;
    
    // optional uint32 uint32_duration = 6;
    public java.lang.Integer uint32Duration;
    
    // optional uint32 uint32_size = 7;
    public java.lang.Integer uint32Size;
    
    // optional string str_type = 8;
    public java.lang.String strType;
    
    // optional string str_file_name = 9;
    public java.lang.String strFileName;
    
    // optional string str_file_ext = 10;
    public java.lang.String strFileExt;
    
    // optional int32 int32_album_id = 11;
    public java.lang.Integer int32AlbumId;
    
    // repeated string rpt_str_keywords = 13;
    public java.lang.String[] rptStrKeywords;
    
    // optional uint32 uint32_RADIO_type = 14;
    public java.lang.Integer uint32RADIOType;
    
    // optional bool b_favourite = 19;
    public java.lang.Boolean bFavourite;
    
    // repeated string rpt_str_alias = 20;
    public java.lang.String[] rptStrAlias;
    
    // optional string str_search_text = 21;
    public java.lang.String strSearchText;
    
    // optional uint32 uint32_app_id = 22;
    public java.lang.Integer uint32AppId;
    
    // optional uint64 uint64_audio_id = 23;
    public java.lang.Long uint64AudioId;
    
    // optional string str_category = 24;
    public java.lang.String strCategory;
    
    // optional string str_tag = 25;
    public java.lang.String strTag;
    
    // optional string str_episode = 26;
    public java.lang.String strEpisode;
    
    // optional string str_subCategory = 27;
    public java.lang.String strSubCategory;
    
    // optional string str_voice_text = 28;
    public java.lang.String strVoiceText;
    
    // repeated .com.txz.ui.radio.RADIOIndex rpt_radioIndex = 29;
    public com.txz.ui.radio.UiRadio.RADIOIndex[] rptRadioIndex;
    
    public RADIOModel() {
      clear();
    }
    
    public RADIOModel clear() {
      int32Id = null;
      strTitle = null;
      strAlbum = null;
      rptStrArtist = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      strPath = null;
      uint32Duration = null;
      uint32Size = null;
      strType = null;
      strFileName = null;
      strFileExt = null;
      int32AlbumId = null;
      rptStrKeywords = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      uint32RADIOType = null;
      bFavourite = null;
      rptStrAlias = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      strSearchText = null;
      uint32AppId = null;
      uint64AudioId = null;
      strCategory = null;
      strTag = null;
      strEpisode = null;
      strSubCategory = null;
      strVoiceText = null;
      rptRadioIndex = com.txz.ui.radio.UiRadio.RADIOIndex.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.int32Id != null) {
        output.writeInt32(1, this.int32Id);
      }
      if (this.strTitle != null) {
        output.writeString(2, this.strTitle);
      }
      if (this.strAlbum != null) {
        output.writeString(3, this.strAlbum);
      }
      if (this.rptStrArtist != null && this.rptStrArtist.length > 0) {
        for (int i = 0; i < this.rptStrArtist.length; i++) {
          java.lang.String element = this.rptStrArtist[i];
          if (element != null) {
            output.writeString(4, element);
          }
        }
      }
      if (this.strPath != null) {
        output.writeString(5, this.strPath);
      }
      if (this.uint32Duration != null) {
        output.writeUInt32(6, this.uint32Duration);
      }
      if (this.uint32Size != null) {
        output.writeUInt32(7, this.uint32Size);
      }
      if (this.strType != null) {
        output.writeString(8, this.strType);
      }
      if (this.strFileName != null) {
        output.writeString(9, this.strFileName);
      }
      if (this.strFileExt != null) {
        output.writeString(10, this.strFileExt);
      }
      if (this.int32AlbumId != null) {
        output.writeInt32(11, this.int32AlbumId);
      }
      if (this.rptStrKeywords != null && this.rptStrKeywords.length > 0) {
        for (int i = 0; i < this.rptStrKeywords.length; i++) {
          java.lang.String element = this.rptStrKeywords[i];
          if (element != null) {
            output.writeString(13, element);
          }
        }
      }
      if (this.uint32RADIOType != null) {
        output.writeUInt32(14, this.uint32RADIOType);
      }
      if (this.bFavourite != null) {
        output.writeBool(19, this.bFavourite);
      }
      if (this.rptStrAlias != null && this.rptStrAlias.length > 0) {
        for (int i = 0; i < this.rptStrAlias.length; i++) {
          java.lang.String element = this.rptStrAlias[i];
          if (element != null) {
            output.writeString(20, element);
          }
        }
      }
      if (this.strSearchText != null) {
        output.writeString(21, this.strSearchText);
      }
      if (this.uint32AppId != null) {
        output.writeUInt32(22, this.uint32AppId);
      }
      if (this.uint64AudioId != null) {
        output.writeUInt64(23, this.uint64AudioId);
      }
      if (this.strCategory != null) {
        output.writeString(24, this.strCategory);
      }
      if (this.strTag != null) {
        output.writeString(25, this.strTag);
      }
      if (this.strEpisode != null) {
        output.writeString(26, this.strEpisode);
      }
      if (this.strSubCategory != null) {
        output.writeString(27, this.strSubCategory);
      }
      if (this.strVoiceText != null) {
        output.writeString(28, this.strVoiceText);
      }
      if (this.rptRadioIndex != null && this.rptRadioIndex.length > 0) {
        for (int i = 0; i < this.rptRadioIndex.length; i++) {
          com.txz.ui.radio.UiRadio.RADIOIndex element = this.rptRadioIndex[i];
          if (element != null) {
            output.writeMessage(29, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.int32Id != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.int32Id);
      }
      if (this.strTitle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.strTitle);
      }
      if (this.strAlbum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strAlbum);
      }
      if (this.rptStrArtist != null && this.rptStrArtist.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rptStrArtist.length; i++) {
          java.lang.String element = this.rptStrArtist[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.strPath != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.strPath);
      }
      if (this.uint32Duration != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.uint32Duration);
      }
      if (this.uint32Size != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(7, this.uint32Size);
      }
      if (this.strType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.strType);
      }
      if (this.strFileName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.strFileName);
      }
      if (this.strFileExt != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(10, this.strFileExt);
      }
      if (this.int32AlbumId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(11, this.int32AlbumId);
      }
      if (this.rptStrKeywords != null && this.rptStrKeywords.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rptStrKeywords.length; i++) {
          java.lang.String element = this.rptStrKeywords[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.uint32RADIOType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(14, this.uint32RADIOType);
      }
      if (this.bFavourite != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(19, this.bFavourite);
      }
      if (this.rptStrAlias != null && this.rptStrAlias.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rptStrAlias.length; i++) {
          java.lang.String element = this.rptStrAlias[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 2 * dataCount;
      }
      if (this.strSearchText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(21, this.strSearchText);
      }
      if (this.uint32AppId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(22, this.uint32AppId);
      }
      if (this.uint64AudioId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(23, this.uint64AudioId);
      }
      if (this.strCategory != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(24, this.strCategory);
      }
      if (this.strTag != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(25, this.strTag);
      }
      if (this.strEpisode != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(26, this.strEpisode);
      }
      if (this.strSubCategory != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(27, this.strSubCategory);
      }
      if (this.strVoiceText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(28, this.strVoiceText);
      }
      if (this.rptRadioIndex != null && this.rptRadioIndex.length > 0) {
        for (int i = 0; i < this.rptRadioIndex.length; i++) {
          com.txz.ui.radio.UiRadio.RADIOIndex element = this.rptRadioIndex[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(29, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public RADIOModel mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.int32Id = input.readInt32();
            break;
          }
          case 18: {
            this.strTitle = input.readString();
            break;
          }
          case 26: {
            this.strAlbum = input.readString();
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.rptStrArtist == null ? 0 : this.rptStrArtist.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrArtist, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rptStrArtist = newArray;
            break;
          }
          case 42: {
            this.strPath = input.readString();
            break;
          }
          case 48: {
            this.uint32Duration = input.readUInt32();
            break;
          }
          case 56: {
            this.uint32Size = input.readUInt32();
            break;
          }
          case 66: {
            this.strType = input.readString();
            break;
          }
          case 74: {
            this.strFileName = input.readString();
            break;
          }
          case 82: {
            this.strFileExt = input.readString();
            break;
          }
          case 88: {
            this.int32AlbumId = input.readInt32();
            break;
          }
          case 106: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 106);
            int i = this.rptStrKeywords == null ? 0 : this.rptStrKeywords.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrKeywords, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rptStrKeywords = newArray;
            break;
          }
          case 112: {
            this.uint32RADIOType = input.readUInt32();
            break;
          }
          case 152: {
            this.bFavourite = input.readBool();
            break;
          }
          case 162: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 162);
            int i = this.rptStrAlias == null ? 0 : this.rptStrAlias.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptStrAlias, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rptStrAlias = newArray;
            break;
          }
          case 170: {
            this.strSearchText = input.readString();
            break;
          }
          case 176: {
            this.uint32AppId = input.readUInt32();
            break;
          }
          case 184: {
            this.uint64AudioId = input.readUInt64();
            break;
          }
          case 194: {
            this.strCategory = input.readString();
            break;
          }
          case 202: {
            this.strTag = input.readString();
            break;
          }
          case 210: {
            this.strEpisode = input.readString();
            break;
          }
          case 218: {
            this.strSubCategory = input.readString();
            break;
          }
          case 226: {
            this.strVoiceText = input.readString();
            break;
          }
          case 234: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 234);
            int i = this.rptRadioIndex == null ? 0 : this.rptRadioIndex.length;
            com.txz.ui.radio.UiRadio.RADIOIndex[] newArray =
                new com.txz.ui.radio.UiRadio.RADIOIndex[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptRadioIndex, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.ui.radio.UiRadio.RADIOIndex();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.ui.radio.UiRadio.RADIOIndex();
            input.readMessage(newArray[i]);
            this.rptRadioIndex = newArray;
            break;
          }
        }
      }
    }
    
    public static RADIOModel parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RADIOModel(), data);
    }
    
    public static RADIOModel parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RADIOModel().mergeFrom(input);
    }
  }
}
