// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.txz.server_manager;

@SuppressWarnings("hiding")
public interface ServerManager {
  
  // enum SubCommand
  public static final int SUBCMD_DEFAULT = 0;
  public static final int SUBCMD_PUSH = 1;
  public static final int SUBCMD_USER_STATUS = 2;
  public static final int SUBCMD_USER_LOGOUT = 3;
  public static final int SUBCMD_AUDIO_SEARCH = 11;
  public static final int SUBCMD_AUDIO_AUDIO_LIST = 12;
  public static final int SUBCMD_AUDIO_ALBUM_LIST = 13;
  public static final int SUBCMD_AUDIO_FENCI_SEARCH = 14;
  public static final int SUBCMD_AUDIO_ALBUM_INFO = 15;
  public static final int SUMCMD_AUDIO_AUDIO_LIST_BY_CATEGORY = 16;
  public static final int SUBCMD_AUDIO_AUDIO_INFO = 17;
  public static final int SUBCMD_AUDIO_ALBUM_ADD = 18;
  public static final int SUBCMD_AUDIO_SEMANTIC = 21;
  public static final int SUBCMD_AUDIO_SEMANTIC_ADD = 22;
  public static final int SUBCMD_AUDIO_ADD = 25;
  
  // enum ErrorCode
  public static final int EC_DEFAULT = 0;
  public static final int EC_ERROR = 9001;
  public static final int EC_NO_SUPPORT = 9002;
  public static final int EC_USER_OFFLINE = 9003;
  public static final int EC_AUDIO_AUDIO_NO_EXIST = 9101;
  public static final int EC_AUDIO_ARTIST_NO_EXIST = 9102;
  public static final int EC_AUDIO_ALBUM_NO_EXIST = 9103;
  
  // enum Audio_SortType
  public static final int ST_DEFAULT = 0;
  public static final int ST_HOT = 1;
  public static final int ST_NAME_ASC = 2;
  public static final int ST_NAME_DESC = 3;
  public static final int ST_TIME = 4;
  public static final int ST_TIME_ASC = 5;
  public static final int ST_TOP100_TIME = 6;
  public static final int ST_ORDER = 7;
  public static final int ST_ORDER_DESC = 8;
  
  // enum Audio_ResultContentType
  public static final int RCT_UNKNOWN = 0;
  public static final int RCT_AUDIO = 1;
  public static final int RCT_ALBUM = 2;
  
  // enum Audio_SourceType
  public static final int AST_UNKNOWN = 0;
  public static final int AST_MUSIC = 1;
  public static final int AST_FM = 2;
  public static final int ASI_NEWS = 3;
  public static final int ASI_STORYBOOK = 4;
  public static final int AST_TALKSHOW = 5;
  
  // enum Text_Type
  public static final int TT_UNKNOWN = 0;
  public static final int TT_AUDIO_NAME = 1;
  public static final int TT_ARTIST_NAME = 2;
  public static final int TT_ALBUM_NAME = 3;
  public static final int TT_CATEGORY_NAME = 4;
  
  public static final class Req_Push extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Req_Push[] _emptyArray;
    public static Req_Push[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Req_Push[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_type = 1;
    public java.lang.Integer uint32Type;
    
    // optional uint64 uint64_to_uid = 2;
    public java.lang.Long uint64ToUid;
    
    // optional uint64 uint64_push_mid = 4;
    public java.lang.Long uint64PushMid;
    
    // optional uint32 uint32_push_cmd = 3;
    public java.lang.Integer uint32PushCmd;
    
    // optional bytes str_push_data = 5;
    public byte[] strPushData;
    
    public Req_Push() {
      clear();
    }
    
    public Req_Push clear() {
      uint32Type = null;
      uint64ToUid = null;
      uint64PushMid = null;
      uint32PushCmd = null;
      strPushData = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32Type != null) {
        output.writeUInt32(1, this.uint32Type);
      }
      if (this.uint64ToUid != null) {
        output.writeUInt64(2, this.uint64ToUid);
      }
      if (this.uint32PushCmd != null) {
        output.writeUInt32(3, this.uint32PushCmd);
      }
      if (this.uint64PushMid != null) {
        output.writeUInt64(4, this.uint64PushMid);
      }
      if (this.strPushData != null) {
        output.writeBytes(5, this.strPushData);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32Type != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32Type);
      }
      if (this.uint64ToUid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(2, this.uint64ToUid);
      }
      if (this.uint32PushCmd != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32PushCmd);
      }
      if (this.uint64PushMid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(4, this.uint64PushMid);
      }
      if (this.strPushData != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(5, this.strPushData);
      }
      return size;
    }
    
    @Override
    public Req_Push mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32Type = input.readUInt32();
            break;
          }
          case 16: {
            this.uint64ToUid = input.readUInt64();
            break;
          }
          case 24: {
            this.uint32PushCmd = input.readUInt32();
            break;
          }
          case 32: {
            this.uint64PushMid = input.readUInt64();
            break;
          }
          case 42: {
            this.strPushData = input.readBytes();
            break;
          }
        }
      }
    }
    
    public static Req_Push parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Req_Push(), data);
    }
    
    public static Req_Push parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Req_Push().mergeFrom(input);
    }
  }
  
  public static final class Resp_Push extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Resp_Push[] _emptyArray;
    public static Resp_Push[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Resp_Push[0];
          }
        }
      }
      return _emptyArray;
    }
    
    public Resp_Push() {
      clear();
    }
    
    public Resp_Push clear() {
      cachedSize = -1;
      return this;
    }
    
    @Override
    public Resp_Push mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }
    
    public static Resp_Push parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Resp_Push(), data);
    }
    
    public static Resp_Push parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Resp_Push().mergeFrom(input);
    }
  }
  
  public static final class UserStatus extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile UserStatus[] _emptyArray;
    public static UserStatus[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new UserStatus[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint64 uint64_uid = 1;
    public java.lang.Long uint64Uid;
    
    // optional bool b_online = 2;
    public java.lang.Boolean bOnline;
    
    // optional uint32 uint32_client_ip = 3;
    public java.lang.Integer uint32ClientIp;
    
    // optional uint32 uint32_login_time = 4;
    public java.lang.Integer uint32LoginTime;
    
    // optional uint32 uint32_logout_time = 5;
    public java.lang.Integer uint32LogoutTime;
    
    public UserStatus() {
      clear();
    }
    
    public UserStatus clear() {
      uint64Uid = null;
      bOnline = null;
      uint32ClientIp = null;
      uint32LoginTime = null;
      uint32LogoutTime = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint64Uid != null) {
        output.writeUInt64(1, this.uint64Uid);
      }
      if (this.bOnline != null) {
        output.writeBool(2, this.bOnline);
      }
      if (this.uint32ClientIp != null) {
        output.writeUInt32(3, this.uint32ClientIp);
      }
      if (this.uint32LoginTime != null) {
        output.writeUInt32(4, this.uint32LoginTime);
      }
      if (this.uint32LogoutTime != null) {
        output.writeUInt32(5, this.uint32LogoutTime);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint64Uid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.uint64Uid);
      }
      if (this.bOnline != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.bOnline);
      }
      if (this.uint32ClientIp != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32ClientIp);
      }
      if (this.uint32LoginTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.uint32LoginTime);
      }
      if (this.uint32LogoutTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32LogoutTime);
      }
      return size;
    }
    
    @Override
    public UserStatus mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint64Uid = input.readUInt64();
            break;
          }
          case 16: {
            this.bOnline = input.readBool();
            break;
          }
          case 24: {
            this.uint32ClientIp = input.readUInt32();
            break;
          }
          case 32: {
            this.uint32LoginTime = input.readUInt32();
            break;
          }
          case 40: {
            this.uint32LogoutTime = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static UserStatus parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new UserStatus(), data);
    }
    
    public static UserStatus parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new UserStatus().mergeFrom(input);
    }
  }
  
  public static final class Req_UserStatus extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Req_UserStatus[] _emptyArray;
    public static Req_UserStatus[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Req_UserStatus[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated uint64 rpt_uint64_uid_list = 1;
    public long[] rptUint64UidList;
    
    public Req_UserStatus() {
      clear();
    }
    
    public Req_UserStatus clear() {
      rptUint64UidList = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptUint64UidList != null && this.rptUint64UidList.length > 0) {
        for (int i = 0; i < this.rptUint64UidList.length; i++) {
          output.writeUInt64(1, this.rptUint64UidList[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptUint64UidList != null && this.rptUint64UidList.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64UidList.length; i++) {
          long element = this.rptUint64UidList[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64UidList.length;
      }
      return size;
    }
    
    @Override
    public Req_UserStatus mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.rptUint64UidList == null ? 0 : this.rptUint64UidList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64UidList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64UidList = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64UidList == null ? 0 : this.rptUint64UidList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64UidList, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64UidList = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Req_UserStatus parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Req_UserStatus(), data);
    }
    
    public static Req_UserStatus parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Req_UserStatus().mergeFrom(input);
    }
  }
  
  public static final class Resp_UserStatus extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Resp_UserStatus[] _emptyArray;
    public static Resp_UserStatus[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Resp_UserStatus[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.server_manager.UserStatus rpt_msg_user_status_list = 1;
    public com.txz.server_manager.ServerManager.UserStatus[] rptMsgUserStatusList;
    
    public Resp_UserStatus() {
      clear();
    }
    
    public Resp_UserStatus clear() {
      rptMsgUserStatusList = com.txz.server_manager.ServerManager.UserStatus.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptMsgUserStatusList != null && this.rptMsgUserStatusList.length > 0) {
        for (int i = 0; i < this.rptMsgUserStatusList.length; i++) {
          com.txz.server_manager.ServerManager.UserStatus element = this.rptMsgUserStatusList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptMsgUserStatusList != null && this.rptMsgUserStatusList.length > 0) {
        for (int i = 0; i < this.rptMsgUserStatusList.length; i++) {
          com.txz.server_manager.ServerManager.UserStatus element = this.rptMsgUserStatusList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Resp_UserStatus mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.rptMsgUserStatusList == null ? 0 : this.rptMsgUserStatusList.length;
            com.txz.server_manager.ServerManager.UserStatus[] newArray =
                new com.txz.server_manager.ServerManager.UserStatus[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgUserStatusList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.UserStatus();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.UserStatus();
            input.readMessage(newArray[i]);
            this.rptMsgUserStatusList = newArray;
            break;
          }
        }
      }
    }
    
    public static Resp_UserStatus parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Resp_UserStatus(), data);
    }
    
    public static Resp_UserStatus parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Resp_UserStatus().mergeFrom(input);
    }
  }
  
  public static final class Req_UserLogout extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Req_UserLogout[] _emptyArray;
    public static Req_UserLogout[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Req_UserLogout[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated uint64 rpt_uint64_uid_list = 1;
    public long[] rptUint64UidList;
    
    public Req_UserLogout() {
      clear();
    }
    
    public Req_UserLogout clear() {
      rptUint64UidList = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptUint64UidList != null && this.rptUint64UidList.length > 0) {
        for (int i = 0; i < this.rptUint64UidList.length; i++) {
          output.writeUInt64(1, this.rptUint64UidList[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptUint64UidList != null && this.rptUint64UidList.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64UidList.length; i++) {
          long element = this.rptUint64UidList[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64UidList.length;
      }
      return size;
    }
    
    @Override
    public Req_UserLogout mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.rptUint64UidList == null ? 0 : this.rptUint64UidList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64UidList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64UidList = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64UidList == null ? 0 : this.rptUint64UidList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64UidList, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64UidList = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Req_UserLogout parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Req_UserLogout(), data);
    }
    
    public static Req_UserLogout parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Req_UserLogout().mergeFrom(input);
    }
  }
  
  public static final class Resp_UserLogout extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Resp_UserLogout[] _emptyArray;
    public static Resp_UserLogout[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Resp_UserLogout[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated uint64 rpt_uint64_uid_list = 1;
    public long[] rptUint64UidList;
    
    public Resp_UserLogout() {
      clear();
    }
    
    public Resp_UserLogout clear() {
      rptUint64UidList = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptUint64UidList != null && this.rptUint64UidList.length > 0) {
        for (int i = 0; i < this.rptUint64UidList.length; i++) {
          output.writeUInt64(1, this.rptUint64UidList[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptUint64UidList != null && this.rptUint64UidList.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64UidList.length; i++) {
          long element = this.rptUint64UidList[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64UidList.length;
      }
      return size;
    }
    
    @Override
    public Resp_UserLogout mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.rptUint64UidList == null ? 0 : this.rptUint64UidList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64UidList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64UidList = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64UidList == null ? 0 : this.rptUint64UidList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64UidList, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64UidList = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Resp_UserLogout parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Resp_UserLogout(), data);
    }
    
    public static Resp_UserLogout parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Resp_UserLogout().mergeFrom(input);
    }
  }
  
  public static final class Audio_Audio extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Audio[] _emptyArray;
    public static Audio_Audio[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Audio[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint64 uint64_audio_id = 1;
    public java.lang.Long uint64AudioId;
    
    // optional string str_audio_name = 2;
    public java.lang.String strAudioName;
    
    // optional string str_audio_desc = 3;
    public java.lang.String strAudioDesc;
    
    // optional string str_audio_logo = 4;
    public java.lang.String strAudioLogo;
    
    // repeated uint64 rpt_uint64_album_ids = 5;
    public long[] rptUint64AlbumIds;
    
    // optional uint32 uint32_create_time = 6;
    public java.lang.Integer uint32CreateTime;
    
    // optional uint32 uint32_duration = 7;
    public java.lang.Integer uint32Duration;
    
    // optional uint32 uint32_file_size = 8;
    public java.lang.Integer uint32FileSize;
    
    // repeated uint64 rpt_uint64_artist_ids = 9;
    public long[] rptUint64ArtistIds;
    
    // optional uint32 uint32_liked_num = 10;
    public java.lang.Integer uint32LikedNum;
    
    // optional uint64 uint64_listen_num = 11;
    public java.lang.Long uint64ListenNum;
    
    // optional string str_download_url = 12;
    public java.lang.String strDownloadUrl;
    
    // optional int32 int32_order_num = 13;
    public java.lang.Integer int32OrderNum;
    
    // optional uint32 uint32_score = 14;
    public java.lang.Integer uint32Score;
    
    // optional uint32 uint32_sid = 15;
    public java.lang.Integer uint32Sid;
    
    // repeated .com.txz.server_manager.Audio_Artist rpt_msg_artist_list = 20;
    public com.txz.server_manager.ServerManager.Audio_Artist[] rptMsgArtistList;
    
    // repeated .com.txz.server_manager.Audio_Album rpt_msg_album_list = 21;
    public com.txz.server_manager.ServerManager.Audio_Album[] rptMsgAlbumList;
    
    // repeated .com.txz.server_manager.Audio_Category rpt_msg_category_list = 22;
    public com.txz.server_manager.ServerManager.Audio_Category[] rptMsgCategoryList;
    
    // optional string str_download_H_Q_url = 23;
    public java.lang.String strDownloadHQUrl;
    
    // optional bool b_original = 24;
    public java.lang.Boolean bOriginal;
    
    public Audio_Audio() {
      clear();
    }
    
    public Audio_Audio clear() {
      uint64AudioId = null;
      strAudioName = null;
      strAudioDesc = null;
      strAudioLogo = null;
      rptUint64AlbumIds = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      uint32CreateTime = null;
      uint32Duration = null;
      uint32FileSize = null;
      rptUint64ArtistIds = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      uint32LikedNum = null;
      uint64ListenNum = null;
      strDownloadUrl = null;
      int32OrderNum = null;
      uint32Score = null;
      uint32Sid = null;
      rptMsgArtistList = com.txz.server_manager.ServerManager.Audio_Artist.emptyArray();
      rptMsgAlbumList = com.txz.server_manager.ServerManager.Audio_Album.emptyArray();
      rptMsgCategoryList = com.txz.server_manager.ServerManager.Audio_Category.emptyArray();
      strDownloadHQUrl = null;
      bOriginal = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint64AudioId != null) {
        output.writeUInt64(1, this.uint64AudioId);
      }
      if (this.strAudioName != null) {
        output.writeString(2, this.strAudioName);
      }
      if (this.strAudioDesc != null) {
        output.writeString(3, this.strAudioDesc);
      }
      if (this.strAudioLogo != null) {
        output.writeString(4, this.strAudioLogo);
      }
      if (this.rptUint64AlbumIds != null && this.rptUint64AlbumIds.length > 0) {
        for (int i = 0; i < this.rptUint64AlbumIds.length; i++) {
          output.writeUInt64(5, this.rptUint64AlbumIds[i]);
        }
      }
      if (this.uint32CreateTime != null) {
        output.writeUInt32(6, this.uint32CreateTime);
      }
      if (this.uint32Duration != null) {
        output.writeUInt32(7, this.uint32Duration);
      }
      if (this.uint32FileSize != null) {
        output.writeUInt32(8, this.uint32FileSize);
      }
      if (this.rptUint64ArtistIds != null && this.rptUint64ArtistIds.length > 0) {
        for (int i = 0; i < this.rptUint64ArtistIds.length; i++) {
          output.writeUInt64(9, this.rptUint64ArtistIds[i]);
        }
      }
      if (this.uint32LikedNum != null) {
        output.writeUInt32(10, this.uint32LikedNum);
      }
      if (this.uint64ListenNum != null) {
        output.writeUInt64(11, this.uint64ListenNum);
      }
      if (this.strDownloadUrl != null) {
        output.writeString(12, this.strDownloadUrl);
      }
      if (this.int32OrderNum != null) {
        output.writeInt32(13, this.int32OrderNum);
      }
      if (this.uint32Score != null) {
        output.writeUInt32(14, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        output.writeUInt32(15, this.uint32Sid);
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            output.writeMessage(20, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            output.writeMessage(21, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            output.writeMessage(22, element);
          }
        }
      }
      if (this.strDownloadHQUrl != null) {
        output.writeString(23, this.strDownloadHQUrl);
      }
      if (this.bOriginal != null) {
        output.writeBool(24, this.bOriginal);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint64AudioId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.uint64AudioId);
      }
      if (this.strAudioName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.strAudioName);
      }
      if (this.strAudioDesc != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strAudioDesc);
      }
      if (this.strAudioLogo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.strAudioLogo);
      }
      if (this.rptUint64AlbumIds != null && this.rptUint64AlbumIds.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64AlbumIds.length; i++) {
          long element = this.rptUint64AlbumIds[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64AlbumIds.length;
      }
      if (this.uint32CreateTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.uint32CreateTime);
      }
      if (this.uint32Duration != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(7, this.uint32Duration);
      }
      if (this.uint32FileSize != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(8, this.uint32FileSize);
      }
      if (this.rptUint64ArtistIds != null && this.rptUint64ArtistIds.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64ArtistIds.length; i++) {
          long element = this.rptUint64ArtistIds[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64ArtistIds.length;
      }
      if (this.uint32LikedNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(10, this.uint32LikedNum);
      }
      if (this.uint64ListenNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(11, this.uint64ListenNum);
      }
      if (this.strDownloadUrl != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(12, this.strDownloadUrl);
      }
      if (this.int32OrderNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(13, this.int32OrderNum);
      }
      if (this.uint32Score != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(14, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(15, this.uint32Sid);
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(20, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(21, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(22, element);
          }
        }
      }
      if (this.strDownloadHQUrl != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(23, this.strDownloadHQUrl);
      }
      if (this.bOriginal != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(24, this.bOriginal);
      }
      return size;
    }
    
    @Override
    public Audio_Audio mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint64AudioId = input.readUInt64();
            break;
          }
          case 18: {
            this.strAudioName = input.readString();
            break;
          }
          case 26: {
            this.strAudioDesc = input.readString();
            break;
          }
          case 34: {
            this.strAudioLogo = input.readString();
            break;
          }
          case 40: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 40);
            int i = this.rptUint64AlbumIds == null ? 0 : this.rptUint64AlbumIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AlbumIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64AlbumIds = newArray;
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64AlbumIds == null ? 0 : this.rptUint64AlbumIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AlbumIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64AlbumIds = newArray;
            input.popLimit(limit);
            break;
          }
          case 48: {
            this.uint32CreateTime = input.readUInt32();
            break;
          }
          case 56: {
            this.uint32Duration = input.readUInt32();
            break;
          }
          case 64: {
            this.uint32FileSize = input.readUInt32();
            break;
          }
          case 72: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 72);
            int i = this.rptUint64ArtistIds == null ? 0 : this.rptUint64ArtistIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64ArtistIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64ArtistIds = newArray;
            break;
          }
          case 74: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64ArtistIds == null ? 0 : this.rptUint64ArtistIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64ArtistIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64ArtistIds = newArray;
            input.popLimit(limit);
            break;
          }
          case 80: {
            this.uint32LikedNum = input.readUInt32();
            break;
          }
          case 88: {
            this.uint64ListenNum = input.readUInt64();
            break;
          }
          case 98: {
            this.strDownloadUrl = input.readString();
            break;
          }
          case 104: {
            this.int32OrderNum = input.readInt32();
            break;
          }
          case 112: {
            this.uint32Score = input.readUInt32();
            break;
          }
          case 120: {
            this.uint32Sid = input.readUInt32();
            break;
          }
          case 162: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 162);
            int i = this.rptMsgArtistList == null ? 0 : this.rptMsgArtistList.length;
            com.txz.server_manager.ServerManager.Audio_Artist[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Artist[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgArtistList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
            input.readMessage(newArray[i]);
            this.rptMsgArtistList = newArray;
            break;
          }
          case 170: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 170);
            int i = this.rptMsgAlbumList == null ? 0 : this.rptMsgAlbumList.length;
            com.txz.server_manager.ServerManager.Audio_Album[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAlbumList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
            input.readMessage(newArray[i]);
            this.rptMsgAlbumList = newArray;
            break;
          }
          case 178: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 178);
            int i = this.rptMsgCategoryList == null ? 0 : this.rptMsgCategoryList.length;
            com.txz.server_manager.ServerManager.Audio_Category[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Category[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgCategoryList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
            input.readMessage(newArray[i]);
            this.rptMsgCategoryList = newArray;
            break;
          }
          case 186: {
            this.strDownloadHQUrl = input.readString();
            break;
          }
          case 192: {
            this.bOriginal = input.readBool();
            break;
          }
        }
      }
    }
    
    public static Audio_Audio parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Audio(), data);
    }
    
    public static Audio_Audio parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Audio().mergeFrom(input);
    }
  }
  
  public static final class Audio_Album extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Album[] _emptyArray;
    public static Audio_Album[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Album[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint64 uint64_album_id = 1;
    public java.lang.Long uint64AlbumId;
    
    // optional string str_album_name = 2;
    public java.lang.String strAlbumName;
    
    // optional string str_album_logo = 3;
    public java.lang.String strAlbumLogo;
    
    // optional string str_album_desc = 4;
    public java.lang.String strAlbumDesc;
    
    // repeated uint64 rpt_uint64_artist_ids = 5;
    public long[] rptUint64ArtistIds;
    
    // optional uint32 uint32_liked_num = 6;
    public java.lang.Integer uint32LikedNum;
    
    // optional uint64 uint64_listen_num = 7;
    public java.lang.Long uint64ListenNum;
    
    // repeated int32 rpt_int32_category_ids = 8;
    public int[] rptInt32CategoryIds;
    
    // optional uint32 uint32_update_time = 9;
    public java.lang.Integer uint32UpdateTime;
    
    // optional uint32 uint32_local_update_time = 10;
    public java.lang.Integer uint32LocalUpdateTime;
    
    // optional uint32 uint32_score = 11;
    public java.lang.Integer uint32Score;
    
    // optional uint32 uint32_sid = 12;
    public java.lang.Integer uint32Sid;
    
    // repeated .com.txz.server_manager.Audio_Artist rpt_msg_artist_list = 20;
    public com.txz.server_manager.ServerManager.Audio_Artist[] rptMsgArtistList;
    
    public Audio_Album() {
      clear();
    }
    
    public Audio_Album clear() {
      uint64AlbumId = null;
      strAlbumName = null;
      strAlbumLogo = null;
      strAlbumDesc = null;
      rptUint64ArtistIds = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      uint32LikedNum = null;
      uint64ListenNum = null;
      rptInt32CategoryIds = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      uint32UpdateTime = null;
      uint32LocalUpdateTime = null;
      uint32Score = null;
      uint32Sid = null;
      rptMsgArtistList = com.txz.server_manager.ServerManager.Audio_Artist.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint64AlbumId != null) {
        output.writeUInt64(1, this.uint64AlbumId);
      }
      if (this.strAlbumName != null) {
        output.writeString(2, this.strAlbumName);
      }
      if (this.strAlbumLogo != null) {
        output.writeString(3, this.strAlbumLogo);
      }
      if (this.strAlbumDesc != null) {
        output.writeString(4, this.strAlbumDesc);
      }
      if (this.rptUint64ArtistIds != null && this.rptUint64ArtistIds.length > 0) {
        for (int i = 0; i < this.rptUint64ArtistIds.length; i++) {
          output.writeUInt64(5, this.rptUint64ArtistIds[i]);
        }
      }
      if (this.uint32LikedNum != null) {
        output.writeUInt32(6, this.uint32LikedNum);
      }
      if (this.uint64ListenNum != null) {
        output.writeUInt64(7, this.uint64ListenNum);
      }
      if (this.rptInt32CategoryIds != null && this.rptInt32CategoryIds.length > 0) {
        for (int i = 0; i < this.rptInt32CategoryIds.length; i++) {
          output.writeInt32(8, this.rptInt32CategoryIds[i]);
        }
      }
      if (this.uint32UpdateTime != null) {
        output.writeUInt32(9, this.uint32UpdateTime);
      }
      if (this.uint32LocalUpdateTime != null) {
        output.writeUInt32(10, this.uint32LocalUpdateTime);
      }
      if (this.uint32Score != null) {
        output.writeUInt32(11, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        output.writeUInt32(12, this.uint32Sid);
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            output.writeMessage(20, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint64AlbumId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.uint64AlbumId);
      }
      if (this.strAlbumName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.strAlbumName);
      }
      if (this.strAlbumLogo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strAlbumLogo);
      }
      if (this.strAlbumDesc != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.strAlbumDesc);
      }
      if (this.rptUint64ArtistIds != null && this.rptUint64ArtistIds.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64ArtistIds.length; i++) {
          long element = this.rptUint64ArtistIds[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64ArtistIds.length;
      }
      if (this.uint32LikedNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.uint32LikedNum);
      }
      if (this.uint64ListenNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(7, this.uint64ListenNum);
      }
      if (this.rptInt32CategoryIds != null && this.rptInt32CategoryIds.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptInt32CategoryIds.length; i++) {
          int element = this.rptInt32CategoryIds[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptInt32CategoryIds.length;
      }
      if (this.uint32UpdateTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(9, this.uint32UpdateTime);
      }
      if (this.uint32LocalUpdateTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(10, this.uint32LocalUpdateTime);
      }
      if (this.uint32Score != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(11, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(12, this.uint32Sid);
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(20, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Album mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint64AlbumId = input.readUInt64();
            break;
          }
          case 18: {
            this.strAlbumName = input.readString();
            break;
          }
          case 26: {
            this.strAlbumLogo = input.readString();
            break;
          }
          case 34: {
            this.strAlbumDesc = input.readString();
            break;
          }
          case 40: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 40);
            int i = this.rptUint64ArtistIds == null ? 0 : this.rptUint64ArtistIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64ArtistIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64ArtistIds = newArray;
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64ArtistIds == null ? 0 : this.rptUint64ArtistIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64ArtistIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64ArtistIds = newArray;
            input.popLimit(limit);
            break;
          }
          case 48: {
            this.uint32LikedNum = input.readUInt32();
            break;
          }
          case 56: {
            this.uint64ListenNum = input.readUInt64();
            break;
          }
          case 64: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 64);
            int i = this.rptInt32CategoryIds == null ? 0 : this.rptInt32CategoryIds.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptInt32CategoryIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readInt32();
            this.rptInt32CategoryIds = newArray;
            break;
          }
          case 66: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptInt32CategoryIds == null ? 0 : this.rptInt32CategoryIds.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptInt32CategoryIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readInt32();
            }
            this.rptInt32CategoryIds = newArray;
            input.popLimit(limit);
            break;
          }
          case 72: {
            this.uint32UpdateTime = input.readUInt32();
            break;
          }
          case 80: {
            this.uint32LocalUpdateTime = input.readUInt32();
            break;
          }
          case 88: {
            this.uint32Score = input.readUInt32();
            break;
          }
          case 96: {
            this.uint32Sid = input.readUInt32();
            break;
          }
          case 162: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 162);
            int i = this.rptMsgArtistList == null ? 0 : this.rptMsgArtistList.length;
            com.txz.server_manager.ServerManager.Audio_Artist[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Artist[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgArtistList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
            input.readMessage(newArray[i]);
            this.rptMsgArtistList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Album parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Album(), data);
    }
    
    public static Audio_Album parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Album().mergeFrom(input);
    }
  }
  
  public static final class Audio_Category extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Category[] _emptyArray;
    public static Audio_Category[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Category[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional int32 int32_category_id = 1;
    public java.lang.Integer int32CategoryId;
    
    // optional string str_category_name = 2;
    public java.lang.String strCategoryName;
    
    // optional string str_category_logo = 3;
    public java.lang.String strCategoryLogo;
    
    // optional int32 int32_category_parent_id = 4;
    public java.lang.Integer int32CategoryParentId;
    
    // optional uint32 uint32_score = 5;
    public java.lang.Integer uint32Score;
    
    // optional uint32 uint32_sid = 6;
    public java.lang.Integer uint32Sid;
    
    public Audio_Category() {
      clear();
    }
    
    public Audio_Category clear() {
      int32CategoryId = null;
      strCategoryName = null;
      strCategoryLogo = null;
      int32CategoryParentId = null;
      uint32Score = null;
      uint32Sid = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.int32CategoryId != null) {
        output.writeInt32(1, this.int32CategoryId);
      }
      if (this.strCategoryName != null) {
        output.writeString(2, this.strCategoryName);
      }
      if (this.strCategoryLogo != null) {
        output.writeString(3, this.strCategoryLogo);
      }
      if (this.int32CategoryParentId != null) {
        output.writeInt32(4, this.int32CategoryParentId);
      }
      if (this.uint32Score != null) {
        output.writeUInt32(5, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        output.writeUInt32(6, this.uint32Sid);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.int32CategoryId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.int32CategoryId);
      }
      if (this.strCategoryName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.strCategoryName);
      }
      if (this.strCategoryLogo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strCategoryLogo);
      }
      if (this.int32CategoryParentId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.int32CategoryParentId);
      }
      if (this.uint32Score != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.uint32Sid);
      }
      return size;
    }
    
    @Override
    public Audio_Category mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.int32CategoryId = input.readInt32();
            break;
          }
          case 18: {
            this.strCategoryName = input.readString();
            break;
          }
          case 26: {
            this.strCategoryLogo = input.readString();
            break;
          }
          case 32: {
            this.int32CategoryParentId = input.readInt32();
            break;
          }
          case 40: {
            this.uint32Score = input.readUInt32();
            break;
          }
          case 48: {
            this.uint32Sid = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static Audio_Category parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Category(), data);
    }
    
    public static Audio_Category parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Category().mergeFrom(input);
    }
  }
  
  public static final class Audio_Artist extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Artist[] _emptyArray;
    public static Audio_Artist[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Artist[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint64 uint64_artist_id = 1;
    public java.lang.Long uint64ArtistId;
    
    // optional string str_artist_name = 2;
    public java.lang.String strArtistName;
    
    // optional string str_artist_desc = 3;
    public java.lang.String strArtistDesc;
    
    // optional string str_artist_logo = 4;
    public java.lang.String strArtistLogo;
    
    // optional uint32 uint32_score = 5;
    public java.lang.Integer uint32Score;
    
    // optional uint32 uint32_sid = 6;
    public java.lang.Integer uint32Sid;
    
    public Audio_Artist() {
      clear();
    }
    
    public Audio_Artist clear() {
      uint64ArtistId = null;
      strArtistName = null;
      strArtistDesc = null;
      strArtistLogo = null;
      uint32Score = null;
      uint32Sid = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint64ArtistId != null) {
        output.writeUInt64(1, this.uint64ArtistId);
      }
      if (this.strArtistName != null) {
        output.writeString(2, this.strArtistName);
      }
      if (this.strArtistDesc != null) {
        output.writeString(3, this.strArtistDesc);
      }
      if (this.strArtistLogo != null) {
        output.writeString(4, this.strArtistLogo);
      }
      if (this.uint32Score != null) {
        output.writeUInt32(5, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        output.writeUInt32(6, this.uint32Sid);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint64ArtistId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.uint64ArtistId);
      }
      if (this.strArtistName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.strArtistName);
      }
      if (this.strArtistDesc != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strArtistDesc);
      }
      if (this.strArtistLogo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.strArtistLogo);
      }
      if (this.uint32Score != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32Score);
      }
      if (this.uint32Sid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.uint32Sid);
      }
      return size;
    }
    
    @Override
    public Audio_Artist mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint64ArtistId = input.readUInt64();
            break;
          }
          case 18: {
            this.strArtistName = input.readString();
            break;
          }
          case 26: {
            this.strArtistDesc = input.readString();
            break;
          }
          case 34: {
            this.strArtistLogo = input.readString();
            break;
          }
          case 40: {
            this.uint32Score = input.readUInt32();
            break;
          }
          case 48: {
            this.uint32Sid = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static Audio_Artist parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Artist(), data);
    }
    
    public static Audio_Artist parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Artist().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_Search extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_Search[] _emptyArray;
    public static Audio_Req_Search[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_Search[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string str_audio_name = 1;
    public java.lang.String strAudioName;
    
    // optional string str_artist_name = 2;
    public java.lang.String strArtistName;
    
    // optional string str_category_name = 3;
    public java.lang.String strCategoryName;
    
    // optional string str_album_name = 5;
    public java.lang.String strAlbumName;
    
    // optional string str_area = 6;
    public java.lang.String strArea;
    
    // optional uint32 uint32_begin_time = 7;
    public java.lang.Integer uint32BeginTime;
    
    // optional uint32 uint32_end_time = 8;
    public java.lang.Integer uint32EndTime;
    
    // optional string str_season = 9;
    public java.lang.String strSeason;
    
    // optional uint32 uint32_result_type = 10;
    public java.lang.Integer uint32ResultType;
    
    // optional uint32 uint32_sort_type = 11;
    public java.lang.Integer uint32SortType;
    
    // optional bool b_sure = 12;
    public java.lang.Boolean bSure;
    
    // optional string str_search_text = 13;
    public java.lang.String strSearchText;
    
    public Audio_Req_Search() {
      clear();
    }
    
    public Audio_Req_Search clear() {
      strAudioName = null;
      strArtistName = null;
      strCategoryName = null;
      strAlbumName = null;
      strArea = null;
      uint32BeginTime = null;
      uint32EndTime = null;
      strSeason = null;
      uint32ResultType = null;
      uint32SortType = null;
      bSure = null;
      strSearchText = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strAudioName != null) {
        output.writeString(1, this.strAudioName);
      }
      if (this.strArtistName != null) {
        output.writeString(2, this.strArtistName);
      }
      if (this.strCategoryName != null) {
        output.writeString(3, this.strCategoryName);
      }
      if (this.strAlbumName != null) {
        output.writeString(5, this.strAlbumName);
      }
      if (this.strArea != null) {
        output.writeString(6, this.strArea);
      }
      if (this.uint32BeginTime != null) {
        output.writeUInt32(7, this.uint32BeginTime);
      }
      if (this.uint32EndTime != null) {
        output.writeUInt32(8, this.uint32EndTime);
      }
      if (this.strSeason != null) {
        output.writeString(9, this.strSeason);
      }
      if (this.uint32ResultType != null) {
        output.writeUInt32(10, this.uint32ResultType);
      }
      if (this.uint32SortType != null) {
        output.writeUInt32(11, this.uint32SortType);
      }
      if (this.bSure != null) {
        output.writeBool(12, this.bSure);
      }
      if (this.strSearchText != null) {
        output.writeString(13, this.strSearchText);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strAudioName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.strAudioName);
      }
      if (this.strArtistName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.strArtistName);
      }
      if (this.strCategoryName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strCategoryName);
      }
      if (this.strAlbumName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.strAlbumName);
      }
      if (this.strArea != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.strArea);
      }
      if (this.uint32BeginTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(7, this.uint32BeginTime);
      }
      if (this.uint32EndTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(8, this.uint32EndTime);
      }
      if (this.strSeason != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.strSeason);
      }
      if (this.uint32ResultType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(10, this.uint32ResultType);
      }
      if (this.uint32SortType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(11, this.uint32SortType);
      }
      if (this.bSure != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(12, this.bSure);
      }
      if (this.strSearchText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(13, this.strSearchText);
      }
      return size;
    }
    
    @Override
    public Audio_Req_Search mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strAudioName = input.readString();
            break;
          }
          case 18: {
            this.strArtistName = input.readString();
            break;
          }
          case 26: {
            this.strCategoryName = input.readString();
            break;
          }
          case 42: {
            this.strAlbumName = input.readString();
            break;
          }
          case 50: {
            this.strArea = input.readString();
            break;
          }
          case 56: {
            this.uint32BeginTime = input.readUInt32();
            break;
          }
          case 64: {
            this.uint32EndTime = input.readUInt32();
            break;
          }
          case 74: {
            this.strSeason = input.readString();
            break;
          }
          case 80: {
            this.uint32ResultType = input.readUInt32();
            break;
          }
          case 88: {
            this.uint32SortType = input.readUInt32();
            break;
          }
          case 96: {
            this.bSure = input.readBool();
            break;
          }
          case 106: {
            this.strSearchText = input.readString();
            break;
          }
        }
      }
    }
    
    public static Audio_Req_Search parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_Search(), data);
    }
    
    public static Audio_Req_Search parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_Search().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_Search extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_Search[] _emptyArray;
    public static Audio_Resp_Search[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_Search[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.server_manager.Audio_Audio rpt_msg_audio_list = 1;
    public com.txz.server_manager.ServerManager.Audio_Audio[] rptMsgAudioList;
    
    // repeated .com.txz.server_manager.Audio_Artist rpt_msg_artist_list = 2;
    public com.txz.server_manager.ServerManager.Audio_Artist[] rptMsgArtistList;
    
    // repeated .com.txz.server_manager.Audio_Album rpt_msg_album_list = 3;
    public com.txz.server_manager.ServerManager.Audio_Album[] rptMsgAlbumList;
    
    // repeated .com.txz.server_manager.Audio_Category rpt_msg_category_list = 4;
    public com.txz.server_manager.ServerManager.Audio_Category[] rptMsgCategoryList;
    
    // optional uint32 uint32_max_score = 5;
    public java.lang.Integer uint32MaxScore;
    
    // optional uint32 uint32_err_season = 6;
    public java.lang.Integer uint32ErrSeason;
    
    public Audio_Resp_Search() {
      clear();
    }
    
    public Audio_Resp_Search clear() {
      rptMsgAudioList = com.txz.server_manager.ServerManager.Audio_Audio.emptyArray();
      rptMsgArtistList = com.txz.server_manager.ServerManager.Audio_Artist.emptyArray();
      rptMsgAlbumList = com.txz.server_manager.ServerManager.Audio_Album.emptyArray();
      rptMsgCategoryList = com.txz.server_manager.ServerManager.Audio_Category.emptyArray();
      uint32MaxScore = null;
      uint32ErrSeason = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            output.writeMessage(4, element);
          }
        }
      }
      if (this.uint32MaxScore != null) {
        output.writeUInt32(5, this.uint32MaxScore);
      }
      if (this.uint32ErrSeason != null) {
        output.writeUInt32(6, this.uint32ErrSeason);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(4, element);
          }
        }
      }
      if (this.uint32MaxScore != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32MaxScore);
      }
      if (this.uint32ErrSeason != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.uint32ErrSeason);
      }
      return size;
    }
    
    @Override
    public Audio_Resp_Search mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.rptMsgAudioList == null ? 0 : this.rptMsgAudioList.length;
            com.txz.server_manager.ServerManager.Audio_Audio[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Audio[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
            input.readMessage(newArray[i]);
            this.rptMsgAudioList = newArray;
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.rptMsgArtistList == null ? 0 : this.rptMsgArtistList.length;
            com.txz.server_manager.ServerManager.Audio_Artist[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Artist[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgArtistList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
            input.readMessage(newArray[i]);
            this.rptMsgArtistList = newArray;
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.rptMsgAlbumList == null ? 0 : this.rptMsgAlbumList.length;
            com.txz.server_manager.ServerManager.Audio_Album[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAlbumList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
            input.readMessage(newArray[i]);
            this.rptMsgAlbumList = newArray;
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.rptMsgCategoryList == null ? 0 : this.rptMsgCategoryList.length;
            com.txz.server_manager.ServerManager.Audio_Category[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Category[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgCategoryList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
            input.readMessage(newArray[i]);
            this.rptMsgCategoryList = newArray;
            break;
          }
          case 40: {
            this.uint32MaxScore = input.readUInt32();
            break;
          }
          case 48: {
            this.uint32ErrSeason = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_Search parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_Search(), data);
    }
    
    public static Audio_Resp_Search parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_Search().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_AudioList extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_AudioList[] _emptyArray;
    public static Audio_Req_AudioList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_AudioList[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_page_id = 1;
    public java.lang.Integer uint32PageId;
    
    // optional uint32 uint32_num_of_page = 2;
    public java.lang.Integer uint32NumOfPage;
    
    // optional uint32 uint32_sort_type = 3;
    public java.lang.Integer uint32SortType;
    
    // optional uint64 uint64_album_id = 4;
    public java.lang.Long uint64AlbumId;
    
    // repeated uint64 rpt_uint64_audio_ids = 5;
    public long[] rptUint64AudioIds;
    
    public Audio_Req_AudioList() {
      clear();
    }
    
    public Audio_Req_AudioList clear() {
      uint32PageId = null;
      uint32NumOfPage = null;
      uint32SortType = null;
      uint64AlbumId = null;
      rptUint64AudioIds = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32PageId != null) {
        output.writeUInt32(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        output.writeUInt32(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        output.writeUInt32(3, this.uint32SortType);
      }
      if (this.uint64AlbumId != null) {
        output.writeUInt64(4, this.uint64AlbumId);
      }
      if (this.rptUint64AudioIds != null && this.rptUint64AudioIds.length > 0) {
        for (int i = 0; i < this.rptUint64AudioIds.length; i++) {
          output.writeUInt64(5, this.rptUint64AudioIds[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32PageId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32SortType);
      }
      if (this.uint64AlbumId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(4, this.uint64AlbumId);
      }
      if (this.rptUint64AudioIds != null && this.rptUint64AudioIds.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64AudioIds.length; i++) {
          long element = this.rptUint64AudioIds[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64AudioIds.length;
      }
      return size;
    }
    
    @Override
    public Audio_Req_AudioList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32PageId = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32NumOfPage = input.readUInt32();
            break;
          }
          case 24: {
            this.uint32SortType = input.readUInt32();
            break;
          }
          case 32: {
            this.uint64AlbumId = input.readUInt64();
            break;
          }
          case 40: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 40);
            int i = this.rptUint64AudioIds == null ? 0 : this.rptUint64AudioIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AudioIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64AudioIds = newArray;
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64AudioIds == null ? 0 : this.rptUint64AudioIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AudioIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64AudioIds = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Audio_Req_AudioList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_AudioList(), data);
    }
    
    public static Audio_Req_AudioList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_AudioList().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_AudioList extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_AudioList[] _emptyArray;
    public static Audio_Resp_AudioList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_AudioList[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_page_id = 1;
    public java.lang.Integer uint32PageId;
    
    // optional uint32 uint32_num_of_page = 2;
    public java.lang.Integer uint32NumOfPage;
    
    // optional uint32 uint32_sort_type = 3;
    public java.lang.Integer uint32SortType;
    
    // optional uint32 uint32_total_num = 4;
    public java.lang.Integer uint32TotalNum;
    
    // optional uint32 uint32_total_page = 5;
    public java.lang.Integer uint32TotalPage;
    
    // repeated .com.txz.server_manager.Audio_Audio rpt_msg_audio_list = 6;
    public com.txz.server_manager.ServerManager.Audio_Audio[] rptMsgAudioList;
    
    // repeated .com.txz.server_manager.Audio_Artist rpt_msg_artist_list = 7;
    public com.txz.server_manager.ServerManager.Audio_Artist[] rptMsgArtistList;
    
    // repeated .com.txz.server_manager.Audio_Album rpt_msg_album_list = 8;
    public com.txz.server_manager.ServerManager.Audio_Album[] rptMsgAlbumList;
    
    // repeated .com.txz.server_manager.Audio_Category rpt_msg_category_list = 9;
    public com.txz.server_manager.ServerManager.Audio_Category[] rptMsgCategoryList;
    
    public Audio_Resp_AudioList() {
      clear();
    }
    
    public Audio_Resp_AudioList clear() {
      uint32PageId = null;
      uint32NumOfPage = null;
      uint32SortType = null;
      uint32TotalNum = null;
      uint32TotalPage = null;
      rptMsgAudioList = com.txz.server_manager.ServerManager.Audio_Audio.emptyArray();
      rptMsgArtistList = com.txz.server_manager.ServerManager.Audio_Artist.emptyArray();
      rptMsgAlbumList = com.txz.server_manager.ServerManager.Audio_Album.emptyArray();
      rptMsgCategoryList = com.txz.server_manager.ServerManager.Audio_Category.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32PageId != null) {
        output.writeUInt32(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        output.writeUInt32(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        output.writeUInt32(3, this.uint32SortType);
      }
      if (this.uint32TotalNum != null) {
        output.writeUInt32(4, this.uint32TotalNum);
      }
      if (this.uint32TotalPage != null) {
        output.writeUInt32(5, this.uint32TotalPage);
      }
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            output.writeMessage(7, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            output.writeMessage(8, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            output.writeMessage(9, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32PageId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32SortType);
      }
      if (this.uint32TotalNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.uint32TotalNum);
      }
      if (this.uint32TotalPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32TotalPage);
      }
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(8, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(9, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Resp_AudioList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32PageId = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32NumOfPage = input.readUInt32();
            break;
          }
          case 24: {
            this.uint32SortType = input.readUInt32();
            break;
          }
          case 32: {
            this.uint32TotalNum = input.readUInt32();
            break;
          }
          case 40: {
            this.uint32TotalPage = input.readUInt32();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.rptMsgAudioList == null ? 0 : this.rptMsgAudioList.length;
            com.txz.server_manager.ServerManager.Audio_Audio[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Audio[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
            input.readMessage(newArray[i]);
            this.rptMsgAudioList = newArray;
            break;
          }
          case 58: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.rptMsgArtistList == null ? 0 : this.rptMsgArtistList.length;
            com.txz.server_manager.ServerManager.Audio_Artist[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Artist[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgArtistList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
            input.readMessage(newArray[i]);
            this.rptMsgArtistList = newArray;
            break;
          }
          case 66: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 66);
            int i = this.rptMsgAlbumList == null ? 0 : this.rptMsgAlbumList.length;
            com.txz.server_manager.ServerManager.Audio_Album[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAlbumList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
            input.readMessage(newArray[i]);
            this.rptMsgAlbumList = newArray;
            break;
          }
          case 74: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 74);
            int i = this.rptMsgCategoryList == null ? 0 : this.rptMsgCategoryList.length;
            com.txz.server_manager.ServerManager.Audio_Category[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Category[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgCategoryList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
            input.readMessage(newArray[i]);
            this.rptMsgCategoryList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_AudioList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_AudioList(), data);
    }
    
    public static Audio_Resp_AudioList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_AudioList().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_AudioListByCategory extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_AudioListByCategory[] _emptyArray;
    public static Audio_Req_AudioListByCategory[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_AudioListByCategory[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_page_id = 1;
    public java.lang.Integer uint32PageId;
    
    // optional uint32 uint32_num_of_page = 2;
    public java.lang.Integer uint32NumOfPage;
    
    // optional uint32 uint32_sort_type = 3;
    public java.lang.Integer uint32SortType;
    
    // optional int32 int32_category_id = 4;
    public java.lang.Integer int32CategoryId;
    
    // repeated uint64 rpt_uint64_audio_ids = 5;
    public long[] rptUint64AudioIds;
    
    public Audio_Req_AudioListByCategory() {
      clear();
    }
    
    public Audio_Req_AudioListByCategory clear() {
      uint32PageId = null;
      uint32NumOfPage = null;
      uint32SortType = null;
      int32CategoryId = null;
      rptUint64AudioIds = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32PageId != null) {
        output.writeUInt32(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        output.writeUInt32(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        output.writeUInt32(3, this.uint32SortType);
      }
      if (this.int32CategoryId != null) {
        output.writeInt32(4, this.int32CategoryId);
      }
      if (this.rptUint64AudioIds != null && this.rptUint64AudioIds.length > 0) {
        for (int i = 0; i < this.rptUint64AudioIds.length; i++) {
          output.writeUInt64(5, this.rptUint64AudioIds[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32PageId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32SortType);
      }
      if (this.int32CategoryId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.int32CategoryId);
      }
      if (this.rptUint64AudioIds != null && this.rptUint64AudioIds.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64AudioIds.length; i++) {
          long element = this.rptUint64AudioIds[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64AudioIds.length;
      }
      return size;
    }
    
    @Override
    public Audio_Req_AudioListByCategory mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32PageId = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32NumOfPage = input.readUInt32();
            break;
          }
          case 24: {
            this.uint32SortType = input.readUInt32();
            break;
          }
          case 32: {
            this.int32CategoryId = input.readInt32();
            break;
          }
          case 40: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 40);
            int i = this.rptUint64AudioIds == null ? 0 : this.rptUint64AudioIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AudioIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64AudioIds = newArray;
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64AudioIds == null ? 0 : this.rptUint64AudioIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AudioIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64AudioIds = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Audio_Req_AudioListByCategory parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_AudioListByCategory(), data);
    }
    
    public static Audio_Req_AudioListByCategory parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_AudioListByCategory().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_AudioListByCategory extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_AudioListByCategory[] _emptyArray;
    public static Audio_Resp_AudioListByCategory[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_AudioListByCategory[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_page_id = 1;
    public java.lang.Integer uint32PageId;
    
    // optional uint32 uint32_num_of_page = 2;
    public java.lang.Integer uint32NumOfPage;
    
    // optional uint32 uint32_sort_type = 3;
    public java.lang.Integer uint32SortType;
    
    // optional uint32 uint32_total_num = 4;
    public java.lang.Integer uint32TotalNum;
    
    // optional uint32 uint32_total_page = 5;
    public java.lang.Integer uint32TotalPage;
    
    // repeated .com.txz.server_manager.Audio_Audio rpt_msg_audio_list = 6;
    public com.txz.server_manager.ServerManager.Audio_Audio[] rptMsgAudioList;
    
    // repeated .com.txz.server_manager.Audio_Artist rpt_msg_artist_list = 7;
    public com.txz.server_manager.ServerManager.Audio_Artist[] rptMsgArtistList;
    
    // repeated .com.txz.server_manager.Audio_Album rpt_msg_album_list = 8;
    public com.txz.server_manager.ServerManager.Audio_Album[] rptMsgAlbumList;
    
    // repeated .com.txz.server_manager.Audio_Category rpt_msg_category_list = 9;
    public com.txz.server_manager.ServerManager.Audio_Category[] rptMsgCategoryList;
    
    public Audio_Resp_AudioListByCategory() {
      clear();
    }
    
    public Audio_Resp_AudioListByCategory clear() {
      uint32PageId = null;
      uint32NumOfPage = null;
      uint32SortType = null;
      uint32TotalNum = null;
      uint32TotalPage = null;
      rptMsgAudioList = com.txz.server_manager.ServerManager.Audio_Audio.emptyArray();
      rptMsgArtistList = com.txz.server_manager.ServerManager.Audio_Artist.emptyArray();
      rptMsgAlbumList = com.txz.server_manager.ServerManager.Audio_Album.emptyArray();
      rptMsgCategoryList = com.txz.server_manager.ServerManager.Audio_Category.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32PageId != null) {
        output.writeUInt32(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        output.writeUInt32(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        output.writeUInt32(3, this.uint32SortType);
      }
      if (this.uint32TotalNum != null) {
        output.writeUInt32(4, this.uint32TotalNum);
      }
      if (this.uint32TotalPage != null) {
        output.writeUInt32(5, this.uint32TotalPage);
      }
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            output.writeMessage(7, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            output.writeMessage(8, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            output.writeMessage(9, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32PageId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32SortType);
      }
      if (this.uint32TotalNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.uint32TotalNum);
      }
      if (this.uint32TotalPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32TotalPage);
      }
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, element);
          }
        }
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(8, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(9, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Resp_AudioListByCategory mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32PageId = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32NumOfPage = input.readUInt32();
            break;
          }
          case 24: {
            this.uint32SortType = input.readUInt32();
            break;
          }
          case 32: {
            this.uint32TotalNum = input.readUInt32();
            break;
          }
          case 40: {
            this.uint32TotalPage = input.readUInt32();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.rptMsgAudioList == null ? 0 : this.rptMsgAudioList.length;
            com.txz.server_manager.ServerManager.Audio_Audio[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Audio[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
            input.readMessage(newArray[i]);
            this.rptMsgAudioList = newArray;
            break;
          }
          case 58: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.rptMsgArtistList == null ? 0 : this.rptMsgArtistList.length;
            com.txz.server_manager.ServerManager.Audio_Artist[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Artist[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgArtistList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
            input.readMessage(newArray[i]);
            this.rptMsgArtistList = newArray;
            break;
          }
          case 66: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 66);
            int i = this.rptMsgAlbumList == null ? 0 : this.rptMsgAlbumList.length;
            com.txz.server_manager.ServerManager.Audio_Album[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAlbumList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
            input.readMessage(newArray[i]);
            this.rptMsgAlbumList = newArray;
            break;
          }
          case 74: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 74);
            int i = this.rptMsgCategoryList == null ? 0 : this.rptMsgCategoryList.length;
            com.txz.server_manager.ServerManager.Audio_Category[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Category[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgCategoryList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
            input.readMessage(newArray[i]);
            this.rptMsgCategoryList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_AudioListByCategory parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_AudioListByCategory(), data);
    }
    
    public static Audio_Resp_AudioListByCategory parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_AudioListByCategory().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_AlbumList extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_AlbumList[] _emptyArray;
    public static Audio_Req_AlbumList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_AlbumList[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_page_id = 1;
    public java.lang.Integer uint32PageId;
    
    // optional uint32 uint32_num_of_page = 2;
    public java.lang.Integer uint32NumOfPage;
    
    // optional uint32 uint32_sort_type = 3;
    public java.lang.Integer uint32SortType;
    
    // optional int32 int32_category_id = 4;
    public java.lang.Integer int32CategoryId;
    
    // repeated uint64 rpt_uint64_album_ids = 5;
    public long[] rptUint64AlbumIds;
    
    public Audio_Req_AlbumList() {
      clear();
    }
    
    public Audio_Req_AlbumList clear() {
      uint32PageId = null;
      uint32NumOfPage = null;
      uint32SortType = null;
      int32CategoryId = null;
      rptUint64AlbumIds = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32PageId != null) {
        output.writeUInt32(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        output.writeUInt32(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        output.writeUInt32(3, this.uint32SortType);
      }
      if (this.int32CategoryId != null) {
        output.writeInt32(4, this.int32CategoryId);
      }
      if (this.rptUint64AlbumIds != null && this.rptUint64AlbumIds.length > 0) {
        for (int i = 0; i < this.rptUint64AlbumIds.length; i++) {
          output.writeUInt64(5, this.rptUint64AlbumIds[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32PageId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32SortType);
      }
      if (this.int32CategoryId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.int32CategoryId);
      }
      if (this.rptUint64AlbumIds != null && this.rptUint64AlbumIds.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64AlbumIds.length; i++) {
          long element = this.rptUint64AlbumIds[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64AlbumIds.length;
      }
      return size;
    }
    
    @Override
    public Audio_Req_AlbumList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32PageId = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32NumOfPage = input.readUInt32();
            break;
          }
          case 24: {
            this.uint32SortType = input.readUInt32();
            break;
          }
          case 32: {
            this.int32CategoryId = input.readInt32();
            break;
          }
          case 40: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 40);
            int i = this.rptUint64AlbumIds == null ? 0 : this.rptUint64AlbumIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AlbumIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64AlbumIds = newArray;
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64AlbumIds == null ? 0 : this.rptUint64AlbumIds.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AlbumIds, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64AlbumIds = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Audio_Req_AlbumList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_AlbumList(), data);
    }
    
    public static Audio_Req_AlbumList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_AlbumList().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_AlbumList extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_AlbumList[] _emptyArray;
    public static Audio_Resp_AlbumList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_AlbumList[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_page_id = 1;
    public java.lang.Integer uint32PageId;
    
    // optional uint32 uint32_num_of_page = 2;
    public java.lang.Integer uint32NumOfPage;
    
    // optional uint32 uint32_sort_type = 3;
    public java.lang.Integer uint32SortType;
    
    // optional uint32 uint32_total_num = 4;
    public java.lang.Integer uint32TotalNum;
    
    // optional uint32 uint32_total_page = 5;
    public java.lang.Integer uint32TotalPage;
    
    // repeated .com.txz.server_manager.Audio_Album rpt_msg_album_list = 6;
    public com.txz.server_manager.ServerManager.Audio_Album[] rptMsgAlbumList;
    
    // repeated .com.txz.server_manager.Audio_Artist rpt_msg_artist_list = 7;
    public com.txz.server_manager.ServerManager.Audio_Artist[] rptMsgArtistList;
    
    // repeated .com.txz.server_manager.Audio_Category rpt_msg_category_list = 8;
    public com.txz.server_manager.ServerManager.Audio_Category[] rptMsgCategoryList;
    
    public Audio_Resp_AlbumList() {
      clear();
    }
    
    public Audio_Resp_AlbumList clear() {
      uint32PageId = null;
      uint32NumOfPage = null;
      uint32SortType = null;
      uint32TotalNum = null;
      uint32TotalPage = null;
      rptMsgAlbumList = com.txz.server_manager.ServerManager.Audio_Album.emptyArray();
      rptMsgArtistList = com.txz.server_manager.ServerManager.Audio_Artist.emptyArray();
      rptMsgCategoryList = com.txz.server_manager.ServerManager.Audio_Category.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32PageId != null) {
        output.writeUInt32(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        output.writeUInt32(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        output.writeUInt32(3, this.uint32SortType);
      }
      if (this.uint32TotalNum != null) {
        output.writeUInt32(4, this.uint32TotalNum);
      }
      if (this.uint32TotalPage != null) {
        output.writeUInt32(5, this.uint32TotalPage);
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            output.writeMessage(7, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            output.writeMessage(8, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32PageId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32PageId);
      }
      if (this.uint32NumOfPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32NumOfPage);
      }
      if (this.uint32SortType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.uint32SortType);
      }
      if (this.uint32TotalNum != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.uint32TotalNum);
      }
      if (this.uint32TotalPage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32TotalPage);
      }
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      if (this.rptMsgArtistList != null && this.rptMsgArtistList.length > 0) {
        for (int i = 0; i < this.rptMsgArtistList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Artist element = this.rptMsgArtistList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, element);
          }
        }
      }
      if (this.rptMsgCategoryList != null && this.rptMsgCategoryList.length > 0) {
        for (int i = 0; i < this.rptMsgCategoryList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Category element = this.rptMsgCategoryList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(8, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Resp_AlbumList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32PageId = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32NumOfPage = input.readUInt32();
            break;
          }
          case 24: {
            this.uint32SortType = input.readUInt32();
            break;
          }
          case 32: {
            this.uint32TotalNum = input.readUInt32();
            break;
          }
          case 40: {
            this.uint32TotalPage = input.readUInt32();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.rptMsgAlbumList == null ? 0 : this.rptMsgAlbumList.length;
            com.txz.server_manager.ServerManager.Audio_Album[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAlbumList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
            input.readMessage(newArray[i]);
            this.rptMsgAlbumList = newArray;
            break;
          }
          case 58: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.rptMsgArtistList == null ? 0 : this.rptMsgArtistList.length;
            com.txz.server_manager.ServerManager.Audio_Artist[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Artist[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgArtistList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Artist();
            input.readMessage(newArray[i]);
            this.rptMsgArtistList = newArray;
            break;
          }
          case 66: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 66);
            int i = this.rptMsgCategoryList == null ? 0 : this.rptMsgCategoryList.length;
            com.txz.server_manager.ServerManager.Audio_Category[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Category[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgCategoryList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Category();
            input.readMessage(newArray[i]);
            this.rptMsgCategoryList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_AlbumList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_AlbumList(), data);
    }
    
    public static Audio_Resp_AlbumList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_AlbumList().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_Semantic extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_Semantic[] _emptyArray;
    public static Audio_Req_Semantic[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_Semantic[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string str_text = 1;
    public java.lang.String strText;
    
    public Audio_Req_Semantic() {
      clear();
    }
    
    public Audio_Req_Semantic clear() {
      strText = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strText != null) {
        output.writeString(1, this.strText);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.strText);
      }
      return size;
    }
    
    @Override
    public Audio_Req_Semantic mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strText = input.readString();
            break;
          }
        }
      }
    }
    
    public static Audio_Req_Semantic parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_Semantic(), data);
    }
    
    public static Audio_Req_Semantic parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_Semantic().mergeFrom(input);
    }
  }
  
  public static final class Audio_SemanticResult extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_SemanticResult[] _emptyArray;
    public static Audio_SemanticResult[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_SemanticResult[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_score = 1;
    public java.lang.Integer uint32Score;
    
    // optional uint32 uint32_audio_source_type = 2;
    public java.lang.Integer uint32AudioSourceType;
    
    // optional string str_artist_name = 3;
    public java.lang.String strArtistName;
    
    // optional string str_audio_name = 4;
    public java.lang.String strAudioName;
    
    // optional string str_album_name = 5;
    public java.lang.String strAlbumName;
    
    // optional string str_category_name = 6;
    public java.lang.String strCategoryName;
    
    public Audio_SemanticResult() {
      clear();
    }
    
    public Audio_SemanticResult clear() {
      uint32Score = null;
      uint32AudioSourceType = null;
      strArtistName = null;
      strAudioName = null;
      strAlbumName = null;
      strCategoryName = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32Score != null) {
        output.writeUInt32(1, this.uint32Score);
      }
      if (this.uint32AudioSourceType != null) {
        output.writeUInt32(2, this.uint32AudioSourceType);
      }
      if (this.strArtistName != null) {
        output.writeString(3, this.strArtistName);
      }
      if (this.strAudioName != null) {
        output.writeString(4, this.strAudioName);
      }
      if (this.strAlbumName != null) {
        output.writeString(5, this.strAlbumName);
      }
      if (this.strCategoryName != null) {
        output.writeString(6, this.strCategoryName);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32Score != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32Score);
      }
      if (this.uint32AudioSourceType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32AudioSourceType);
      }
      if (this.strArtistName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.strArtistName);
      }
      if (this.strAudioName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.strAudioName);
      }
      if (this.strAlbumName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.strAlbumName);
      }
      if (this.strCategoryName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.strCategoryName);
      }
      return size;
    }
    
    @Override
    public Audio_SemanticResult mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32Score = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32AudioSourceType = input.readUInt32();
            break;
          }
          case 26: {
            this.strArtistName = input.readString();
            break;
          }
          case 34: {
            this.strAudioName = input.readString();
            break;
          }
          case 42: {
            this.strAlbumName = input.readString();
            break;
          }
          case 50: {
            this.strCategoryName = input.readString();
            break;
          }
        }
      }
    }
    
    public static Audio_SemanticResult parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_SemanticResult(), data);
    }
    
    public static Audio_SemanticResult parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_SemanticResult().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_Semantic extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_Semantic[] _emptyArray;
    public static Audio_Resp_Semantic[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_Semantic[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string str_text = 1;
    public java.lang.String strText;
    
    // repeated .com.txz.server_manager.Audio_SemanticResult rpt_msg_result_list = 2;
    public com.txz.server_manager.ServerManager.Audio_SemanticResult[] rptMsgResultList;
    
    public Audio_Resp_Semantic() {
      clear();
    }
    
    public Audio_Resp_Semantic clear() {
      strText = null;
      rptMsgResultList = com.txz.server_manager.ServerManager.Audio_SemanticResult.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.strText != null) {
        output.writeString(1, this.strText);
      }
      if (this.rptMsgResultList != null && this.rptMsgResultList.length > 0) {
        for (int i = 0; i < this.rptMsgResultList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_SemanticResult element = this.rptMsgResultList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.strText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.strText);
      }
      if (this.rptMsgResultList != null && this.rptMsgResultList.length > 0) {
        for (int i = 0; i < this.rptMsgResultList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_SemanticResult element = this.rptMsgResultList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Resp_Semantic mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.strText = input.readString();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.rptMsgResultList == null ? 0 : this.rptMsgResultList.length;
            com.txz.server_manager.ServerManager.Audio_SemanticResult[] newArray =
                new com.txz.server_manager.ServerManager.Audio_SemanticResult[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgResultList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_SemanticResult();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_SemanticResult();
            input.readMessage(newArray[i]);
            this.rptMsgResultList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_Semantic parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_Semantic(), data);
    }
    
    public static Audio_Resp_Semantic parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_Semantic().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_Add extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_Add[] _emptyArray;
    public static Audio_Req_Add[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_Add[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.server_manager.Audio_Audio rpt_msg_audio_list = 1;
    public com.txz.server_manager.ServerManager.Audio_Audio[] rptMsgAudioList;
    
    public Audio_Req_Add() {
      clear();
    }
    
    public Audio_Req_Add clear() {
      rptMsgAudioList = com.txz.server_manager.ServerManager.Audio_Audio.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Req_Add mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.rptMsgAudioList == null ? 0 : this.rptMsgAudioList.length;
            com.txz.server_manager.ServerManager.Audio_Audio[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Audio[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
            input.readMessage(newArray[i]);
            this.rptMsgAudioList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Req_Add parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_Add(), data);
    }
    
    public static Audio_Req_Add parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_Add().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_Add extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_Add[] _emptyArray;
    public static Audio_Resp_Add[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_Add[0];
          }
        }
      }
      return _emptyArray;
    }
    
    public Audio_Resp_Add() {
      clear();
    }
    
    public Audio_Resp_Add clear() {
      cachedSize = -1;
      return this;
    }
    
    @Override
    public Audio_Resp_Add mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_Add parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_Add(), data);
    }
    
    public static Audio_Resp_Add parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_Add().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_Album_Info extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_Album_Info[] _emptyArray;
    public static Audio_Req_Album_Info[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_Album_Info[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated uint64 rpt_uint64_album_id_list = 1;
    public long[] rptUint64AlbumIdList;
    
    public Audio_Req_Album_Info() {
      clear();
    }
    
    public Audio_Req_Album_Info clear() {
      rptUint64AlbumIdList = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptUint64AlbumIdList != null && this.rptUint64AlbumIdList.length > 0) {
        for (int i = 0; i < this.rptUint64AlbumIdList.length; i++) {
          output.writeUInt64(1, this.rptUint64AlbumIdList[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptUint64AlbumIdList != null && this.rptUint64AlbumIdList.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64AlbumIdList.length; i++) {
          long element = this.rptUint64AlbumIdList[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64AlbumIdList.length;
      }
      return size;
    }
    
    @Override
    public Audio_Req_Album_Info mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.rptUint64AlbumIdList == null ? 0 : this.rptUint64AlbumIdList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AlbumIdList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64AlbumIdList = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64AlbumIdList == null ? 0 : this.rptUint64AlbumIdList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AlbumIdList, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64AlbumIdList = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Audio_Req_Album_Info parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_Album_Info(), data);
    }
    
    public static Audio_Req_Album_Info parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_Album_Info().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_Album_Info extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_Album_Info[] _emptyArray;
    public static Audio_Resp_Album_Info[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_Album_Info[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.server_manager.Audio_Album rpt_msg_album_list = 3;
    public com.txz.server_manager.ServerManager.Audio_Album[] rptMsgAlbumList;
    
    public Audio_Resp_Album_Info() {
      clear();
    }
    
    public Audio_Resp_Album_Info clear() {
      rptMsgAlbumList = com.txz.server_manager.ServerManager.Audio_Album.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptMsgAlbumList != null && this.rptMsgAlbumList.length > 0) {
        for (int i = 0; i < this.rptMsgAlbumList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptMsgAlbumList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Resp_Album_Info mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.rptMsgAlbumList == null ? 0 : this.rptMsgAlbumList.length;
            com.txz.server_manager.ServerManager.Audio_Album[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAlbumList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
            input.readMessage(newArray[i]);
            this.rptMsgAlbumList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_Album_Info parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_Album_Info(), data);
    }
    
    public static Audio_Resp_Album_Info parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_Album_Info().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_Audio_Info extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_Audio_Info[] _emptyArray;
    public static Audio_Req_Audio_Info[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_Audio_Info[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated uint64 rpt_uint64_audio_id_list = 1;
    public long[] rptUint64AudioIdList;
    
    public Audio_Req_Audio_Info() {
      clear();
    }
    
    public Audio_Req_Audio_Info clear() {
      rptUint64AudioIdList = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptUint64AudioIdList != null && this.rptUint64AudioIdList.length > 0) {
        for (int i = 0; i < this.rptUint64AudioIdList.length; i++) {
          output.writeUInt64(1, this.rptUint64AudioIdList[i]);
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptUint64AudioIdList != null && this.rptUint64AudioIdList.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.rptUint64AudioIdList.length; i++) {
          long element = this.rptUint64AudioIdList[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.rptUint64AudioIdList.length;
      }
      return size;
    }
    
    @Override
    public Audio_Req_Audio_Info mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.rptUint64AudioIdList == null ? 0 : this.rptUint64AudioIdList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AudioIdList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt64();
            this.rptUint64AudioIdList = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.rptUint64AudioIdList == null ? 0 : this.rptUint64AudioIdList.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptUint64AudioIdList, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt64();
            }
            this.rptUint64AudioIdList = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }
    
    public static Audio_Req_Audio_Info parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_Audio_Info(), data);
    }
    
    public static Audio_Req_Audio_Info parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_Audio_Info().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_Audio_Info extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_Audio_Info[] _emptyArray;
    public static Audio_Resp_Audio_Info[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_Audio_Info[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.server_manager.Audio_Audio rpt_msg_audio_list = 1;
    public com.txz.server_manager.ServerManager.Audio_Audio[] rptMsgAudioList;
    
    public Audio_Resp_Audio_Info() {
      clear();
    }
    
    public Audio_Resp_Audio_Info clear() {
      rptMsgAudioList = com.txz.server_manager.ServerManager.Audio_Audio.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptMsgAudioList != null && this.rptMsgAudioList.length > 0) {
        for (int i = 0; i < this.rptMsgAudioList.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Audio element = this.rptMsgAudioList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Resp_Audio_Info mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.rptMsgAudioList == null ? 0 : this.rptMsgAudioList.length;
            com.txz.server_manager.ServerManager.Audio_Audio[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Audio[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptMsgAudioList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Audio();
            input.readMessage(newArray[i]);
            this.rptMsgAudioList = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_Audio_Info parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_Audio_Info(), data);
    }
    
    public static Audio_Resp_Audio_Info parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_Audio_Info().mergeFrom(input);
    }
  }
  
  public static final class Semantic_Struct extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Semantic_Struct[] _emptyArray;
    public static Semantic_Struct[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Semantic_Struct[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_audioSourceType = 1;
    public java.lang.Integer uint32AudioSourceType;
    
    // optional uint32 uint32_textType = 2;
    public java.lang.Integer uint32TextType;
    
    // optional bytes str_text = 3;
    public byte[] strText;
    
    // optional uint64 uint64_orderValue = 4;
    public java.lang.Long uint64OrderValue;
    
    // optional uint32 uint32_weight = 5;
    public java.lang.Integer uint32Weight;
    
    // optional uint32 uint16_sid = 6;
    public java.lang.Integer uint16Sid;
    
    public Semantic_Struct() {
      clear();
    }
    
    public Semantic_Struct clear() {
      uint32AudioSourceType = null;
      uint32TextType = null;
      strText = null;
      uint64OrderValue = null;
      uint32Weight = null;
      uint16Sid = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32AudioSourceType != null) {
        output.writeUInt32(1, this.uint32AudioSourceType);
      }
      if (this.uint32TextType != null) {
        output.writeUInt32(2, this.uint32TextType);
      }
      if (this.strText != null) {
        output.writeBytes(3, this.strText);
      }
      if (this.uint64OrderValue != null) {
        output.writeUInt64(4, this.uint64OrderValue);
      }
      if (this.uint32Weight != null) {
        output.writeUInt32(5, this.uint32Weight);
      }
      if (this.uint16Sid != null) {
        output.writeUInt32(6, this.uint16Sid);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32AudioSourceType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32AudioSourceType);
      }
      if (this.uint32TextType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.uint32TextType);
      }
      if (this.strText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.strText);
      }
      if (this.uint64OrderValue != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(4, this.uint64OrderValue);
      }
      if (this.uint32Weight != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.uint32Weight);
      }
      if (this.uint16Sid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.uint16Sid);
      }
      return size;
    }
    
    @Override
    public Semantic_Struct mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32AudioSourceType = input.readUInt32();
            break;
          }
          case 16: {
            this.uint32TextType = input.readUInt32();
            break;
          }
          case 26: {
            this.strText = input.readBytes();
            break;
          }
          case 32: {
            this.uint64OrderValue = input.readUInt64();
            break;
          }
          case 40: {
            this.uint32Weight = input.readUInt32();
            break;
          }
          case 48: {
            this.uint16Sid = input.readUInt32();
            break;
          }
        }
      }
    }
    
    public static Semantic_Struct parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Semantic_Struct(), data);
    }
    
    public static Semantic_Struct parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Semantic_Struct().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_Semantic_Add extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_Semantic_Add[] _emptyArray;
    public static Audio_Req_Semantic_Add[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_Semantic_Add[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.server_manager.Semantic_Struct rpt_semantic_struct = 1;
    public com.txz.server_manager.ServerManager.Semantic_Struct[] rptSemanticStruct;
    
    public Audio_Req_Semantic_Add() {
      clear();
    }
    
    public Audio_Req_Semantic_Add clear() {
      rptSemanticStruct = com.txz.server_manager.ServerManager.Semantic_Struct.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptSemanticStruct != null && this.rptSemanticStruct.length > 0) {
        for (int i = 0; i < this.rptSemanticStruct.length; i++) {
          com.txz.server_manager.ServerManager.Semantic_Struct element = this.rptSemanticStruct[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptSemanticStruct != null && this.rptSemanticStruct.length > 0) {
        for (int i = 0; i < this.rptSemanticStruct.length; i++) {
          com.txz.server_manager.ServerManager.Semantic_Struct element = this.rptSemanticStruct[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Req_Semantic_Add mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.rptSemanticStruct == null ? 0 : this.rptSemanticStruct.length;
            com.txz.server_manager.ServerManager.Semantic_Struct[] newArray =
                new com.txz.server_manager.ServerManager.Semantic_Struct[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptSemanticStruct, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Semantic_Struct();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Semantic_Struct();
            input.readMessage(newArray[i]);
            this.rptSemanticStruct = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Req_Semantic_Add parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_Semantic_Add(), data);
    }
    
    public static Audio_Req_Semantic_Add parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_Semantic_Add().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_Semantic_Add extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_Semantic_Add[] _emptyArray;
    public static Audio_Resp_Semantic_Add[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_Semantic_Add[0];
          }
        }
      }
      return _emptyArray;
    }
    
    public Audio_Resp_Semantic_Add() {
      clear();
    }
    
    public Audio_Resp_Semantic_Add clear() {
      cachedSize = -1;
      return this;
    }
    
    @Override
    public Audio_Resp_Semantic_Add mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_Semantic_Add parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_Semantic_Add(), data);
    }
    
    public static Audio_Resp_Semantic_Add parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_Semantic_Add().mergeFrom(input);
    }
  }
  
  public static final class Audio_Req_Search_Add_Album extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Req_Search_Add_Album[] _emptyArray;
    public static Audio_Req_Search_Add_Album[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Req_Search_Add_Album[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // repeated .com.txz.server_manager.Audio_Album rpt_album = 1;
    public com.txz.server_manager.ServerManager.Audio_Album[] rptAlbum;
    
    public Audio_Req_Search_Add_Album() {
      clear();
    }
    
    public Audio_Req_Search_Add_Album clear() {
      rptAlbum = com.txz.server_manager.ServerManager.Audio_Album.emptyArray();
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.rptAlbum != null && this.rptAlbum.length > 0) {
        for (int i = 0; i < this.rptAlbum.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptAlbum[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.rptAlbum != null && this.rptAlbum.length > 0) {
        for (int i = 0; i < this.rptAlbum.length; i++) {
          com.txz.server_manager.ServerManager.Audio_Album element = this.rptAlbum[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }
    
    @Override
    public Audio_Req_Search_Add_Album mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.rptAlbum == null ? 0 : this.rptAlbum.length;
            com.txz.server_manager.ServerManager.Audio_Album[] newArray =
                new com.txz.server_manager.ServerManager.Audio_Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rptAlbum, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.txz.server_manager.ServerManager.Audio_Album();
            input.readMessage(newArray[i]);
            this.rptAlbum = newArray;
            break;
          }
        }
      }
    }
    
    public static Audio_Req_Search_Add_Album parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Req_Search_Add_Album(), data);
    }
    
    public static Audio_Req_Search_Add_Album parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Req_Search_Add_Album().mergeFrom(input);
    }
  }
  
  public static final class Audio_Resp_Search_Add_Album extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Audio_Resp_Search_Add_Album[] _emptyArray;
    public static Audio_Resp_Search_Add_Album[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Audio_Resp_Search_Add_Album[0];
          }
        }
      }
      return _emptyArray;
    }
    
    public Audio_Resp_Search_Add_Album() {
      clear();
    }
    
    public Audio_Resp_Search_Add_Album clear() {
      cachedSize = -1;
      return this;
    }
    
    @Override
    public Audio_Resp_Search_Add_Album mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }
    
    public static Audio_Resp_Search_Add_Album parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Audio_Resp_Search_Add_Album(), data);
    }
    
    public static Audio_Resp_Search_Add_Album parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Audio_Resp_Search_Add_Album().mergeFrom(input);
    }
  }
}
