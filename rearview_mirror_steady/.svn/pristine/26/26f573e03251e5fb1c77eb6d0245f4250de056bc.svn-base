// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.txz.app_head;

@SuppressWarnings("hiding")
public interface AppHead {
  
  // enum ErrorCode
  public static final int EC_SUCCESS = 0;
  public static final int EC_INVALID_PARAM = 1;
  public static final int EC_ILLEGAL_USER = 2;
  public static final int EC_TIMEOUT = 3;
  public static final int EC_SERVICE_BEGIN = 4096;
  
  public static final class ClientInfo extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile ClientInfo[] _emptyArray;
    public static ClientInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ClientInfo[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_proto_version = 1;
    public java.lang.Integer uint32ProtoVersion;
    
    // optional bool b_app_data_gzip = 2;
    public java.lang.Boolean bAppDataGzip;
    
    public ClientInfo() {
      clear();
    }
    
    public ClientInfo clear() {
      uint32ProtoVersion = null;
      bAppDataGzip = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32ProtoVersion != null) {
        output.writeUInt32(1, this.uint32ProtoVersion);
      }
      if (this.bAppDataGzip != null) {
        output.writeBool(2, this.bAppDataGzip);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32ProtoVersion != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32ProtoVersion);
      }
      if (this.bAppDataGzip != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.bAppDataGzip);
      }
      return size;
    }
    
    @Override
    public ClientInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32ProtoVersion = input.readUInt32();
            break;
          }
          case 16: {
            this.bAppDataGzip = input.readBool();
            break;
          }
        }
      }
    }
    
    public static ClientInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ClientInfo(), data);
    }
    
    public static ClientInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ClientInfo().mergeFrom(input);
    }
  }
  
  public static final class ServerInfo extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile ServerInfo[] _emptyArray;
    public static ServerInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServerInfo[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint64 uint64_server_time = 1;
    public java.lang.Long uint64ServerTime;
    
    public ServerInfo() {
      clear();
    }
    
    public ServerInfo clear() {
      uint64ServerTime = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint64ServerTime != null) {
        output.writeUInt64(1, this.uint64ServerTime);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint64ServerTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.uint64ServerTime);
      }
      return size;
    }
    
    @Override
    public ServerInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint64ServerTime = input.readUInt64();
            break;
          }
        }
      }
    }
    
    public static ServerInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServerInfo(), data);
    }
    
    public static ServerInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServerInfo().mergeFrom(input);
    }
  }
  
  public static final class Head extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile Head[] _emptyArray;
    public static Head[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Head[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional uint32 uint32_errorcode = 1;
    public java.lang.Integer uint32Errorcode;
    
    // optional .com.txz.app_head.ClientInfo msg_client_info = 4;
    public com.txz.app_head.AppHead.ClientInfo msgClientInfo;
    
    // optional bytes str_body_res_id = 5;
    public byte[] strBodyResId;
    
    // optional uint64 uint64_from_push_mid = 6;
    public java.lang.Long uint64FromPushMid;
    
    // optional .com.txz.app_head.ServerInfo msg_server_info = 7;
    public com.txz.app_head.AppHead.ServerInfo msgServerInfo;
    
    // optional bool b_need_package = 8;
    public java.lang.Boolean bNeedPackage;
    
    public Head() {
      clear();
    }
    
    public Head clear() {
      uint32Errorcode = null;
      msgClientInfo = null;
      strBodyResId = null;
      uint64FromPushMid = null;
      msgServerInfo = null;
      bNeedPackage = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uint32Errorcode != null) {
        output.writeUInt32(1, this.uint32Errorcode);
      }
      if (this.msgClientInfo != null) {
        output.writeMessage(4, this.msgClientInfo);
      }
      if (this.strBodyResId != null) {
        output.writeBytes(5, this.strBodyResId);
      }
      if (this.uint64FromPushMid != null) {
        output.writeUInt64(6, this.uint64FromPushMid);
      }
      if (this.msgServerInfo != null) {
        output.writeMessage(7, this.msgServerInfo);
      }
      if (this.bNeedPackage != null) {
        output.writeBool(8, this.bNeedPackage);
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uint32Errorcode != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.uint32Errorcode);
      }
      if (this.msgClientInfo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.msgClientInfo);
      }
      if (this.strBodyResId != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(5, this.strBodyResId);
      }
      if (this.uint64FromPushMid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(6, this.uint64FromPushMid);
      }
      if (this.msgServerInfo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(7, this.msgServerInfo);
      }
      if (this.bNeedPackage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(8, this.bNeedPackage);
      }
      return size;
    }
    
    @Override
    public Head mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uint32Errorcode = input.readUInt32();
            break;
          }
          case 34: {
            if (this.msgClientInfo == null) {
              this.msgClientInfo = new com.txz.app_head.AppHead.ClientInfo();
            }
            input.readMessage(this.msgClientInfo);
            break;
          }
          case 42: {
            this.strBodyResId = input.readBytes();
            break;
          }
          case 48: {
            this.uint64FromPushMid = input.readUInt64();
            break;
          }
          case 58: {
            if (this.msgServerInfo == null) {
              this.msgServerInfo = new com.txz.app_head.AppHead.ServerInfo();
            }
            input.readMessage(this.msgServerInfo);
            break;
          }
          case 64: {
            this.bNeedPackage = input.readBool();
            break;
          }
        }
      }
    }
    
    public static Head parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Head(), data);
    }
    
    public static Head parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Head().mergeFrom(input);
    }
  }
}
